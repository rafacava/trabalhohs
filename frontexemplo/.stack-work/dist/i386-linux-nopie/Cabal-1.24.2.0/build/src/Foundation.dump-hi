
==================== FINAL INTERFACE ====================
2018-06-14 08:35:41.80796353 UTC

interface frontexemplo-0.0.0-H0c8pw4HC1z92NDocJz3M4:Foundation [family instance module] 8002
  interface hash: 12de119268b7d67b992ea7c9a300af14
  ABI hash: 64c6fbf96d33ebd491062dbdf80ca707
  export-list hash: 5a0daca15c27678e62aa58437e01493a
  orphan hash: 135c4510e58ab58da42d91badbe7a131
  flag hash: d49001dd74596c7d780bfa1e4f9324eb
  sig of: Nothing
  used TH splices: True
  where
exports:
  Foundation.ehAdmin
  Foundation.ehUsuario
  Foundation.resourcesApp
  Foundation.App{Foundation.App appConnPool appHttpManager appLogger appSettings appStatic}
  Foundation.Form
  Foundation.Handler
  Foundation.Widget
  Yesod.Routes.Class.Route{Foundation.AdminR Foundation.CadUsuarioR Foundation.CinemaR Foundation.CinemasR Foundation.FaviconR Foundation.FilmeR Foundation.FilmesR Foundation.HomeR Foundation.ListaCinemaR Foundation.ListaFilmeR Foundation.ListaTreinadorR Foundation.LoginR Foundation.LogoutR Foundation.PaginaSessaoR Foundation.PerfilR Foundation.PerfilUsuarioR Foundation.PokedexR Foundation.PokemonR Foundation.RobotsR Foundation.SessaoR Foundation.StaticR Foundation.TreinadorR}
module dependencies: Import.NoFoundation Model Settings
                     Settings.StaticFiles
package dependencies: ReadArgs-1.2.3@ReadArgs-1.2.3-FZlTw1cmwFABXd9Qu17GpK
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp
                      aeson-1.1.2.0@aeson-1.1.2.0-7ssY6fy1GxZGXxTPcOtf2k
                      aeson-compat-0.3.6@aeson-compat-0.3.6-HFlClSgXxbU7TMoWqS5Yu4
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      appar-0.1.4@appar-0.1.4-DGWHHt2WRn9FI49prcwO9
                      array-0.5.1.1@array-0.5.1.1
                      asn1-encoding-0.9.5@asn1-encoding-0.9.5-CmDkwNPA51zjuzFcENFZ5
                      asn1-parse-0.9.4@asn1-parse-0.9.4-HSgo3I4Jg5sAQWRFdyScvb
                      asn1-types-0.3.2@asn1-types-0.3.2-Ls8owv2hbTfEqG1LKzBcjy
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ
                      attoparsec-iso8601-1.0.0.0@attoparsec-iso8601-1.0.0.0-CiauZZhskHA6jYy7CqE2mZ
                      auto-update-0.1.4@auto-update-0.1.4-EmUvNdmhEju51bHrtaEMpz
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu
                      base16-bytestring-0.1.1.6@base16-bytestring-0.1.1.6-4E2p94lTx8gIceMhu8Kl9o
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw
                      basic-prelude-0.6.1.1@basic-prelude-0.6.1.1-888xsTDtS2CGSoHb1JadEF
                      bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-LxClHUTiKUUAxWtvJ5Oeoy
                      blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p
                      blaze-markup-0.8.0.0@blaze-markup-0.8.0.0-GsxkVbRgODkgUQDmmDVob
                      byteable-0.1.1@byteable-0.1.1-2lU1pexQSLj1KbNO17UifQ
                      byteorder-1.0.4@byteorder-1.0.4-9NlNHkBVdo7F1prFVKrkcH
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-1D5OUKQ7UrJ7IpOe0di4Un
                      cereal-0.5.4.0@cereal-0.5.4.0-BsAGxfp8yAs3CiRo2E875e
                      chunked-data-0.3.0@chunked-data-0.3.0-OOunTfArGE2y1nE8RKgW4
                      cipher-aes-0.2.11@cipher-aes-0.2.11-Iep5jMzxM1u3mGzM17Av1H
                      classy-prelude-1.2.0.1@classy-prelude-1.2.0.1-DI7QyZr6dYQLSGY5Zda29N
                      classy-prelude-conduit-1.2.0@classy-prelude-conduit-1.2.0-4VNoIEo9SLt6t7N4PwpkXU
                      classy-prelude-yesod-1.2.0@classy-prelude-yesod-1.2.0-4tCQqVxZHk5JE3z6jrBT3F
                      clientsession-0.9.1.2@clientsession-0.9.1.2-1HgInPlmxWUKWaagfkcDtu
                      comonad-5.0.2@comonad-5.0.2-Fq9Xy9jdx6uIyJZn00E6Yc
                      conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i
                      conduit-combinators-1.1.1@conduit-combinators-1.1.1-CbpWlJJbANPFWzQzUVNtDU
                      conduit-extra-1.1.17@conduit-extra-1.1.17-LHyPtC0nGlzDcgVxOcd4h4
                      connection-0.2.8@connection-0.2.8-7E5s9ndt8OF7NNDH3ifO8K
                      constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-29zF0Im431177ovfbHYCGv
                      cookie-0.4.2.1@cookie-0.4.2.1-ImqC1hbvUERAwQQgqhuUAD
                      cprng-aes-0.6.1@cprng-aes-0.6.1-CtFLLcV33ZSKCmRTVWdrW7
                      crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570
                      crypto-cipher-types-0.0.9@crypto-cipher-types-0.0.9-JSCTZhqOXgH3EkiMgDwxX
                      crypto-random-0.0.9@crypto-random-0.0.9-381865WP41XFXsmS6fCaFj
                      cryptonite-0.23@cryptonite-0.23-7SwQljDtwztDJ3Fe01tUO9
                      cryptonite-conduit-0.2.0@cryptonite-conduit-0.2.0-LH1qspLlLTXKv70D84KCUO
                      css-text-0.1.2.2@css-text-0.1.2.2-GtPTSZ9vPefILuf2bXZD6W
                      data-default-0.7.1.1@data-default-0.7.1.1-Atv1ZD6t1rI1MrH9qSGaQC
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK
                      data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO
                      data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      deepseq-generics-0.2.0.0@deepseq-generics-0.2.0.0-IjS8Jfo7YCzLKpV8N96gbz
                      directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.3@distributive-0.5.3-IX4kyVcHAyoH4uFYrsjY1R
                      dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk
                      dlist-instances-0.1.1.1@dlist-instances-0.1.1.1-JrfDmjAHlXKJeRjjD0rY07
                      easy-file-0.2.1@easy-file-0.2.1-rguMBNaECxLikt4CCDx0D
                      email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml
                      entropy-0.3.8@entropy-0.3.8-14HIw40nRRY968j6AdY1H4
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      fast-logger-2.4.10@fast-logger-2.4.10-7GMVhEi1femFXwSQxV5ynm
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI
                      free-4.12.4@free-4.12.4-C2gBQV0m8J42HxqSLTFyVx
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      hourglass-0.2.10@hourglass-0.2.10-pnbvWmzfcY1rOFETQEmcY
                      http-api-data-0.3.7.1@http-api-data-0.3.7.1-AT41KDpP9ayH63FPNXWrvF
                      http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q
                      http-client-tls-0.3.5.1@http-client-tls-0.3.5.1-9yHxBE9KmNa1D1xDvn7C4m
                      http-conduit-2.2.3.2@http-conduit-2.2.3.2-5MsxxcFsbFW2aX71Hx1I7R
                      http-date-0.0.6.1@http-date-0.0.6.1-AkYFHBFn90lGSerD29arC9
                      http-types-0.9.1@http-types-0.9.1-G7E1zHPzooHCYxKqGuQmxY
                      http2-1.6.3@http2-1.6.3-5WuWRsIVuKR43Sq9Cs2O4Z integer-gmp-1.0.0.1
                      integer-logarithms-1.0.2@integer-logarithms-1.0.2-92lMiWV9mmYAwfMEYgfQ0D
                      iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR
                      kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX
                      keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT
                      lifted-async-0.9.3@lifted-async-0.9.3-1Yr94BjFrURGjFULK2k39c
                      lifted-base-0.2.3.11@lifted-base-0.2.3.11-Ei0JSPdt7KOCD2HIA5jFqV
                      memory-0.14.8@memory-0.14.8-GdBguxykhKWC3gIuWq62O9
                      mime-types-0.1.0.7@mime-types-0.1.0.7-6b3z22GcDYZLEl2kkfCUAB
                      mmorph-1.0.9@mmorph-1.0.9-5bASEvmIkr5CpdAYXwPsn0
                      monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l
                      monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et
                      monad-loops-0.4.3@monad-loops-0.4.3-ERCN4ZKCeeS5SRhwqXsLBP
                      monad-unlift-0.2.0@monad-unlift-0.2.0-JaCplLBosjYCz9UWF6Saxw
                      mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV
                      mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R
                      mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph
                      old-locale-1.0.0.7@old-locale-1.0.0.7-KGBP1BSKxH5GCm0LnZP04j
                      old-time-1.1.0.3@old-time-1.1.0.3-KWRsMSdY26c2L27Y9n9cyq
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5
                      pem-0.2.2@pem-0.2.2-CkEwei5500yF2642aAaOAi
                      persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u
                      persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n
                      persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS
                      pointed-5@pointed-5-GlRizu1aJXO3QG4Xelc8BV
                      postgresql-libpq-0.9.3.1@postgresql-libpq-0.9.3.1-PNtzTLZ1kPBlp0W2VWiJp
                      postgresql-simple-0.5.3.0@postgresql-simple-0.5.3.0-7wqiM7f7ESv7wSvmAjfLqt
                      prelude-extras-0.4.0.3@prelude-extras-0.4.0.3-BhL9U5k7NtGJn1itwIHt2Y
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      process-1.4.3.0@process-1.4.3.0
                      profunctors-5.2.1@profunctors-5.2.1-Ga89Nyw0d7LBEIoX4AZ6gT
                      psqueues-0.2.4.0@psqueues-0.2.4.0-CvAhEbuBRGQCwl61vq8zYS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      resource-pool-0.2.3.2@resource-pool-0.2.3.2-GmoeVeJ8L5Y51jMJ5dPk3U
                      resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi
                      safe-0.3.15@safe-0.3.15-2Yd45VWFfdcKqKyispOifY
                      safe-exceptions-0.1.6.0@safe-exceptions-0.1.6.0-8HmohVTen8f1fXhFM1N1R3
                      say-0.1.0.0@say-0.1.0.0-4kg0VW7izQr10eu93ritVO
                      scientific-0.3.5.2@scientific-0.3.5.2-FM2NdrNTcdbCDq9wuNnhIA
                      securemem-0.1.9@securemem-0.1.9-I1DISfcspndD6idpVbMBWq
                      semigroupoids-5.2.1@semigroupoids-5.2.1-Db8txM8kTsI6Y49CY6g5Jn
                      shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj
                      silently-1.2.5@silently-1.2.5-HsbqnAAyIOA8viZ4Sccs0a
                      simple-sendfile-0.2.25@simple-sendfile-0.2.25-4uYtK5a0djFILo2ePfLs47
                      skein-1.0.9.4@skein-1.0.9.4-H6iwU6ZhWxE28U4xCLTfo3
                      socks-0.5.5@socks-0.5.5-JArtPcFTnbCItWBjXwWAhO
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      stm-chans-3.0.0.4@stm-chans-3.0.0.4-JX6Y7GVvdkg3BduVhEnPWu
                      streaming-commons-0.1.17@streaming-commons-0.1.17-6xuIA5RXrs65yyeq3HWIWP
                      stringsearch-0.3.6.6@stringsearch-0.3.6.6-2soGORichTR6reHVhDqKip
                      system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      tagsoup-0.14.1@tagsoup-0.14.1-HO0sHb651BeFnnIxljlexR
                      template-haskell-2.11.1.0
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      tls-1.3.11@tls-1.3.11-IxCmr8GdEutIrVRgKylzM6
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-base-0.4.4@transformers-base-0.4.4-GKSs0LKukAL8ymq2naFmrH
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unix-compat-0.4.3.1@unix-compat-0.4.3.1-Ausmw6d7KIwA7sl52mzqxC
                      unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ
                      vault-0.3.0.7@vault-0.3.0.7-FSJCPczyPWW8DwvwP76qt4
                      vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ
                      vector-algorithms-0.7.0.1@vector-algorithms-0.7.0.1-1qlx0Hst1Fo5WZd0lT7Iw1
                      vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1
                      wai-3.2.1.1@wai-3.2.1.1-GYhAFGd1F2uKjCUZVPyC2C
                      wai-app-static-3.1.6.1@wai-app-static-3.1.6.1-IWVzgvpaMYRH5pqRQk33K1
                      wai-extra-3.0.20.0@wai-extra-3.0.20.0-Dj9t4P11I8BnwNE6pZcEP
                      wai-logger-2.3.0@wai-logger-2.3.0-G2LMsBpHwLV49tDfVWxzX4
                      warp-3.2.13@warp-3.2.13-FhWulh599WH9bUCGJnpWGc
                      word8-0.1.3@word8-0.1.3-9o1uWQQ6KysJq8GGsVHHit
                      x509-1.7.2@x509-1.7.2-IixRXIQfpHlXunpaQDNuQ
                      x509-store-1.6.5@x509-store-1.6.5-LPi8AM9vMZO97SZk6SmtWd
                      x509-system-1.6.6@x509-system-1.6.6-GUxFbyk0TndCMp8nKvvL3M
                      x509-validation-1.6.9@x509-validation-1.6.9-4jWSRkWS3kAKZsU0SpJst
                      xml-conduit-1.5.1@xml-conduit-1.5.1-FiRHhqSLReR4vkwAA3escx
                      xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT
                      xss-sanitize-0.3.5.7@xss-sanitize-0.3.5.7-2Pr735gWMIKE1KECS4SIv1
                      yaml-0.8.23.3@yaml-0.8.23.3-C6ya2ht5lnU5AAyP9utctL
                      yesod-1.4.5@yesod-1.4.5-GDhOBR6sYcs6xIyNy56Max
                      yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V
                      yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU
                      yesod-newsfeed-1.6@yesod-newsfeed-1.6-FVeGFThDxmyHNMY2ecmTrZ
                      yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc
                      yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         base-orphans-0.6@base-orphans-0.6-AbJ3lKVXygDCG0eeQEv8Iu:Data.Orphans
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         crypto-api-0.13.2@crypto-api-0.13.2-DBhN9RgaKHp5HflQM2s570:Crypto.Classes
         data-default-instances-containers-0.0.1@data-default-instances-containers-0.0.1-bob6IQGdJq92c061H46zK:Data.Default.Instances.Containers
         data-default-instances-dlist-0.0.1@data-default-instances-dlist-0.0.1-LBT1sjxIvyd63eC0aI9yNO:Data.Default.Instances.DList
         data-default-instances-old-locale-0.0.1@data-default-instances-old-locale-0.0.1-9zaGDEmgOixKkmLylWdN5l:Data.Default.Instances.OldLocale
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Request
         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistUnique
         persistent-template-2.5.2@persistent-template-2.5.2-LNPM4iCBuHkAGJb4ZvbyJS:Database.Persist.TH
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path
         system-filepath-0.4.13.4@system-filepath-0.4.13.4-1Onr71muBMoJ4AF6FUpTVo:Filesystem.Path.CurrentOS
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         unix-time-0.3.7@unix-time-0.3.7-EhnEKT4D7hJajV74Sk5BE:Data.UnixTime.Diff
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Fusion.Bundle
         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
family instance modules: adjunctions-4.3@adjunctions-4.3-A5jfd1yrmaY4DRMJuiquBp:Data.Functor.Rep
                         attoparsec-0.13.1.0@attoparsec-0.13.1.0-3ql4hcH9pGfBAlE21oqFTQ:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Block.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.BoxedArray
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Monad
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.MutableBuilder
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.NonEmpty
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Numerical.Subtractive
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ASCII7
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.ISO_8859_1
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF16
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.String.Encoding.UTF32
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.AsciiString
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.Types.OffsetSize
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UArray.Base
                         basement-0.0.2@basement-0.0.2-HQuQCDQkzPb1RQsskWNdsw:Basement.UTF8.Base
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Flip
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Join
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Tannen
                         bifunctors-5.4.2@bifunctors-5.4.2-KcF2f75KyQm5BjgJ8WkHCw:Data.Bifunctor.Wrapped
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Conduit
                         conduit-1.2.12.1@conduit-1.2.12.1-CTYKTJmwFo81r4LrAKDD8i:Data.Conduit.Internal.Pipe
                         constraints-0.9.1@constraints-0.9.1-5mmQfXdFR8IpJ6JZxzjTB:Data.Constraint.Forall
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.3@dlist-0.8.0.3-BHFBNaw8k6n9WiaUNzoXpk:Data.DList
                         email-validate-2.3.1@email-validate-2.3.1-4WsGncp61DkHAczMlRRvml:Text.Email.Parser
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Bitmap
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Array.Chunked.Unboxed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Buildable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Element
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Keyed
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Collection.Mutable
                         foundation-0.0.15@foundation-0.0.15-Cl70JNuHcCuIxk4jr0SplI:Foundation.Tuple
                         frontexemplo-0.0.0-H0c8pw4HC1z92NDocJz3M4:Model
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Addr
                         iproute-1.7.1@iproute-1.7.1-EJjAtfniBUorobFQnk7lR:Data.IP.Range
                         kan-extensions-5.0.2@kan-extensions-5.0.2-8LTJJ1zQJWB7SfewWXUuqX:Data.Functor.Day
                         keys-3.11@keys-3.11-3rCPtsJiP6i6WPjfB1rcVT:Data.Key
                         monad-control-1.0.2.2@monad-control-1.0.2.2-1Ci8dYJ8Tb7E3HTcTqOb8l:Control.Monad.Trans.Control
                         monad-logger-0.3.25.1@monad-logger-0.3.25.1-C5T06yv6lw54Umfdl3S8et:Control.Monad.Logger
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Containers
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.MonoTraversable
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.NonNull
                         mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Sequences
                         mono-traversable-instances-0.1.0.0@mono-traversable-instances-0.1.0.0-cMPVlKCPiiIbLvZydxEFB:Data.MonoTraversable.Instances
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.BRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Class
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.DLList
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.Deque
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.PRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.SRef
                         mutable-containers-0.3.3@mutable-containers-0.3.3-LD59mBwpMYWF0vy4UyNV9R:Data.Mutable.URef
                         mwc-random-0.13.6.0@mwc-random-0.13.6.0-FYg9HqO0pqB8vcniiPVzVy:System.Random.MWC
                         network-uri-2.6.1.0@network-uri-2.6.1.0-7BN1tbB3iHQ2XgvmqLAYph:Network.URI
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Class.PersistConfig
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Orphan.PersistStore
                         persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types.Internal
                         persistent-postgresql-2.6.1@persistent-postgresql-2.6.1-2dvMQeNrMidL0mEJqjlR9n:Database.Persist.Postgresql
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Data.Primitive.Array
                         resourcet-1.1.9@resourcet-1.1.9-L2BUQrxWZMwDiwhcuyPuNi:Control.Monad.Trans.Resource.Internal
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Internal.Css
                         shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Shakespeare
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-Bp9XgxjuHxcI4tFehVMDGC:Data.HashSet
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuid-types-1.0.3-HQOuja9trySCcuflACyDTJ:Data.UUID.Types.Internal.Builder
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Primitive
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Storable
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed
                         vector-0.12.0.1@vector-0.12.0.1-692PQMDMB6pIQ1uGwefDcQ:Data.Vector.Unboxed.Base
                         vector-instances-3.4@vector-instances-3.4-6qKuR7R2wDjElztDeslDO1:Data.Vector.Instances
                         xml-types-0.3.6@xml-types-0.3.6-BlXpqWNn2ZGFM9gCBPuBeT:Data.XML.Types
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Handler
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Types
                         yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7:Yesod.Static
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Control.Category 424ff8621e550636736e67d6e79e1995
import  -/  base-4.9.1.0:Data.Tuple 500819451d524af6d8c8b1ac52e34754
import  -/  base-4.9.1.0:GHC.Base 7c6dca1da85771cbd20bed24c1d3546b
import  -/  base-4.9.1.0:GHC.Err 5ae61e3396b64ae1e9577b5419c62419
import  -/  base-4.9.1.0:GHC.Read 3d8c91b64a85975b2b733ad39046baa4
import  -/  base-4.9.1.0:GHC.Show e44c8020a8022c9a818d8c773c427dd9
import  -/  base-4.9.1.0:Prelude 4d7ee35012f77eace89fe02e109def8f
import  -/  base-4.9.1.0:Text.ParserCombinators.ReadPrec b94f928e06adc48d0fb9d53902e5ab9c
import  -/  base-4.9.1.0:Text.Read e5e492eef793a61c503520d4fa64782b
import  -/  base-4.9.1.0:Text.Read.Lex f54ccdfc98a68777bda9d774aad6ed9c
import  -/  blaze-html-0.9.0.1@blaze-html-0.9.0.1-GQ0yZtPYt2i2KdgnUEOA8p:Text.Blaze.Html 3b343b0c6a93bd2115a676898c3d08dd
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base 5e6a95c27a15780b9d255a553a546c3f
import  -/  Import.NoFoundation 415125a958308cd0af7d812088e5c7e9
  exports: d6c5bdbcc8ff4a918d59ddc7298ad1c2
import  -/  Model f3fe301cbc8b355acb80ba14273a550e
  CinemaId 76bc834f921bab0539fb6a5c7878479d
  FilmeId ebed9200bb142329989cc7912cdac939
  PokemonId 4a6512990a9b8f4c81d230f78fdc3694
  SessaoId 16b20ed017c387fe112f54d5a90b969e
  TreinadorId 62fb6d66e3546f53a501d038261ff19e
  Usuario 90b2de626384c1f4b796aede180b2882
  Usuario c592e3052a8f5febe73ee6eede9d63fc
  UsuarioId bcde732a5945de49783c87302b55f6a7
import  -/  Settings 59d00f8a01d275eedfa4c2f953795c01
  AppSettings 00a3521109bd86e95bf87471b12220f9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 3876ddae268b9e4fd3619d1fe120f418
import  -/  ghc-prim-0.5.0.0:GHC.Types 39f94fe158a9efa70c6b9005a1d10fca
import  -/  http-client-0.5.7.0@http-client-0.5.7.0-ZH40bByQedKxMmMnUi42q:Network.HTTP.Client.Types ae4d959013ad7c1c4df55801f1567682
import  -/  mono-traversable-1.0.2.1@mono-traversable-1.0.2.1-7cD9xrLpSxs61tMXUUbUIV:Data.Sequences e470d4b03eb7a0ccb7d8103d388d881b
import  -/  path-pieces-0.2.1@path-pieces-0.2.1-Ap205zdHJCr3aorBcPaHM5:Web.PathPieces 3c36bfc2f20e626adaa0dbda2c26d2e5
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql 513536ec3ecce32c0bd7ad7b19d0c4e0
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Run d7a9f151b512f5fdeeac6f984f06fb31
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types a69ef0d69ad4f67646ee5f9099b71b4e
import  -/  persistent-2.7.0@persistent-2.7.0-EkiQsDHg8Z6Ikjfvk7Im1u:Database.Persist.Sql.Types.Internal 9c6c4bc426be14b448509df93d3547fb
import  -/  shakespeare-2.0.14@shakespeare-2.0.14-FNvjJPHGgnVJw5IpBEAfAj:Text.Shakespeare.I18N 44ce675a1a97bbd6d96e61bd0104e6f5
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text e105f5a6b47d676879564e86b510fdbd
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Internal 5809dbeefea22a3458232277c634c6d3
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Class.Yesod dc35a5bdc07b8e48a538957cc413edc1
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Handler 3d20c5e66378ecdf3c20b0ead6eac5df
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Internal.TH 934f6d85ad9bc168b7e3ec511b565ce3
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Core.Types 850af6a923eca0c28746c7c972883cdd
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Routes.Class 1ff8c44239847f88ba9e34b380a0df08
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Routes.Parse 4b9de11118f49962391afaa5ee55042d
import  -/  yesod-core-1.4.37@yesod-core-1.4.37-9j0qKMPCLP0L75AGd8Tz4V:Yesod.Routes.TH.Types 2f8c38cf2419fba810b19c4c426ce510
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU:Yesod.Form.Fields 5c400fdc8a4d1765fdfb7399f2e43a7c
import  -/  yesod-form-1.4.16@yesod-form-1.4.16-FvSoVGpHA8r2nWU5Chx6PU:Yesod.Form.Types e1b09a7f42b7b22202b1bdd49c199c59
import  -/  yesod-persistent-1.4.2@yesod-persistent-1.4.2-4ZnSn6wFGPBBm9cdlnNUzc:Yesod.Persist.Core f12ec7e4082c6ecaada745140ab33a5e
import  -/  yesod-static-1.5.3.1@yesod-static-1.5.3.1-3fPHfGwGXLD6UjosrxUpf7:Yesod.Static f04923544c94021b30ff15b84da7cb21
addDependentFile "config/routes"
a0d81851c2c3b97293b91e34ceefd312
  $fEqRoute ::
    GHC.Classes.Eq (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fEqRoute_$c==
                  Foundation.$fEqRoute_$c/= -}
a0d81851c2c3b97293b91e34ceefd312
  $fEqRoute_$c/= ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: Yesod.Routes.Class.Route Foundation.App)
                   (b :: Yesod.Routes.Class.Route Foundation.App) ->
                 case Foundation.$fEqRoute_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fEqRoute_$c== ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   DEFAULT
                   -> GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag#
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              wild `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                           (GHC.Prim.dataToTag#
                              @ (Yesod.Routes.Class.Route Foundation.App)
                              ds1))
                   Foundation.StaticR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.StaticR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.StaticR b1 -> Yesod.Static.$fEqRoute_$c== a1 b1 }
                   Foundation.PerfilR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.PerfilR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.PerfilR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyTreinador0[0])
                                  (Trans
                                       (Model.N:R:KeyTreinador[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyTreinador0[0])
                                  (Trans
                                       (Model.N:R:KeyTreinador[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.PokedexR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.PokedexR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.PokedexR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyPokemon0[0])
                                  (Trans
                                       (Model.N:R:KeyPokemon[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyPokemon0[0])
                                  (Trans
                                       (Model.N:R:KeyPokemon[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.FilmesR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.FilmesR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.FilmesR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFilme0[0])
                                  (Trans
                                       (Model.N:R:KeyFilme[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyFilme0[0])
                                  (Trans
                                       (Model.N:R:KeyFilme[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.SessaoR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.SessaoR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.SessaoR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyCinema0[0])
                                  (Trans
                                       (Model.N:R:KeyCinema[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyCinema0[0])
                                  (Trans
                                       (Model.N:R:KeyCinema[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.PaginaSessaoR a1 a2
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.PaginaSessaoR a1 a2)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.PaginaSessaoR b1 b2
                        -> case a1
                                  `cast`
                                (Trans
                                     (Model.D:R:KeyCinema0[0])
                                     (Trans
                                          (Model.N:R:KeyCinema[0])
                                          (Trans
                                               (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                               (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of wild2 { GHC.Int.I64# x ->
                           case b1
                                  `cast`
                                (Trans
                                     (Model.D:R:KeyCinema0[0])
                                     (Trans
                                          (Model.N:R:KeyCinema[0])
                                          (Trans
                                               (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                               (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) of wild3 { GHC.Int.I64# y ->
                           case {__pkg_ccall ghc-prim-0.5.0.0 hs_eqInt64 GHC.Prim.Int64#
                                                                         -> GHC.Prim.Int64#
                                                                         -> GHC.Prim.State#
                                                                              GHC.Prim.RealWorld
                                                                         -> (# GHC.Prim.State#
                                                                                 GHC.Prim.RealWorld,
                                                                               GHC.Prim.Int# #)}
                                  x
                                  y
                                  GHC.Prim.realWorld# of wild4 { (#,#) ds2 ds3 ->
                           case GHC.Prim.tagToEnum# @ GHC.Types.Bool ds3 of wild5 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Int.eqInt64
                                  a2
                                    `cast`
                                  (Trans
                                       (Model.D:R:KeySessao0[0])
                                       (Trans
                                            (Model.N:R:KeySessao[0])
                                            (Trans
                                                 (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                 (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                                  b2
                                    `cast`
                                  (Trans
                                       (Model.D:R:KeySessao0[0])
                                       (Trans
                                            (Model.N:R:KeySessao[0])
                                            (Trans
                                                 (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                 (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) } } } } }
                   Foundation.CinemasR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.CinemasR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.CinemasR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyCinema0[0])
                                  (Trans
                                       (Model.N:R:KeyCinema[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyCinema0[0])
                                  (Trans
                                       (Model.N:R:KeyCinema[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) }
                   Foundation.PerfilUsuarioR a1
                   -> case ds1 `cast` (Foundation.D:R:RouteApp0[0]) of wild1 {
                        DEFAULT
                        -> GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.==#
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   (Foundation.PerfilUsuarioR a1)
                                     `cast`
                                   (Sym (Foundation.D:R:RouteApp0[0])))
                                (GHC.Prim.dataToTag#
                                   @ (Yesod.Routes.Class.Route Foundation.App)
                                   wild1 `cast` (Sym (Foundation.D:R:RouteApp0[0]))))
                        Foundation.PerfilUsuarioR b1
                        -> GHC.Int.eqInt64
                             a1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUsuario0[0])
                                  (Trans
                                       (Model.N:R:KeyUsuario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0]))))
                             b1
                               `cast`
                             (Trans
                                  (Model.D:R:KeyUsuario0[0])
                                  (Trans
                                       (Model.N:R:KeyUsuario[0])
                                       (Trans
                                            (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                            (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))) } }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fHasHttpManagerApp ::
    Network.HTTP.Client.Types.HasHttpManager Foundation.App
  DFunId
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U),A)>m,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.appHttpManager
                  `cast`
                (Sym (Network.HTTP.Client.Types.N:HasHttpManager[0]
                          <Foundation.App>_N)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fParseRouteApp :: Yesod.Routes.Class.ParseRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fParseRouteApp_$cparseRoute -}
a0d81851c2c3b97293b91e34ceefd312
  $fParseRouteApp_$cparseRoute ::
    ([Data.Text.Internal.Text],
     [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <S(SL),1*U(1*U,U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: ([Data.Text.Internal.Text],
                          [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) ->
                 case w of ww { (,) ww1 ww2 ->
                 Foundation.$w$cparseRoute ww1 ww2 }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute ::
    GHC.Read.Read (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fReadRoute_$creadsPrec
                  Foundation.$fReadRoute_$creadList
                  Foundation.$fReadRoute_$creadPrec
                  Foundation.$fReadRoute_$creadListPrec -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([Yesod.Routes.Class.Route Foundation.App]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [Yesod.Routes.Class.Route Foundation.App]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.list1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   eta
                   @ b
                   eta1) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute10 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional4
                           11#
                           @ b1
                           (\ (a1 :: Model.CinemaId) ->
                            k1
                              (Foundation.SessaoR a1) `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute11 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
0e904f29b02c41de3e56636ff54b0372
  $fReadRoute11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SessaoR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute12 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional5
                           11#
                           @ b1
                           (\ (a1 :: Model.FilmeId) ->
                            k1
                              (Foundation.FilmesR a1) `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute13 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
6be1d0ca7a442c8cf2ce01d4c20e9716
  $fReadRoute13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FilmesR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute14 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional6
                           11#
                           @ b1
                           (\ (a1 :: Model.PokemonId) ->
                            k1
                              (Foundation.PokedexR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute15 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
23c679da82ec13f0f62c89932db61e0a
  $fReadRoute15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PokedexR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute16 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional7
                           11#
                           @ b1
                           (\ (a1 :: Model.TreinadorId) ->
                            k1
                              (Foundation.PerfilR a1) `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute17 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
6bc95a2ef3547c6d21ffc3930d945cbf
  $fReadRoute17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PerfilR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute18 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional8
                           11#
                           @ b1
                           (\ (a1 :: Yesod.Routes.Class.Route Yesod.Static.Static) ->
                            k1
                              (Foundation.StaticR a1) `cast` (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute19 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
e05e5b318fc520994e0031d1babded70
  $fReadRoute19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: (GHC.Read.parens1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute3
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute20 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute73
                   Foundation.$fReadRoute21) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute21 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute70
                   Foundation.$fReadRoute22) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute22 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute67
                   Foundation.$fReadRoute23) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute23 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute64
                   Foundation.$fReadRoute24) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute24 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute61
                   Foundation.$fReadRoute25) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute25 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute58
                   Foundation.$fReadRoute26) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute26 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute55
                   Foundation.$fReadRoute27) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute27 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute52
                   Foundation.$fReadRoute28) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute28 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute49
                   Foundation.$fReadRoute29) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute29 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute46
                   Foundation.$fReadRoute30) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U(U)>,
     Unfolding: (\ (n :: Text.ParserCombinators.ReadPrec.Prec) ->
                 let {
                   ds2 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = GHC.Read.choose2
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       Foundation.$fReadRoute20
                       n
                 } in
                 let {
                   ds1 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute18
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds3 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute16
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds4 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute14
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds5 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute12
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds6 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute10
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds7 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute8
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds8 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute6
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 let {
                   ds9 :: Text.ParserCombinators.ReadP.ReadP
                            (Yesod.Routes.Class.Route Foundation.App)
                   = case n of wild { GHC.Types.I# x ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.<=# x 10#) of wild2 {
                       GHC.Types.False
                       -> (Text.ParserCombinators.ReadP.pfail1
                             @ (Yesod.Routes.Class.Route Foundation.App))
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R))
                       GHC.Types.True
                       -> Foundation.$fReadRoute4
                            `cast`
                          (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <Yesod.Routes.Class.Route Foundation.App>_R)) } }
                 } in
                 (\ @ b
                    (k :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b) ->
                  Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                    @ b
                    (ds2
                       `cast`
                     (Text.ParserCombinators.ReadP.N:ReadP[0]
                          <Yesod.Routes.Class.Route Foundation.App>_R)
                       @ b
                       k)
                    (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                       @ b
                       (ds1
                          `cast`
                        (Text.ParserCombinators.ReadP.N:ReadP[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R)
                          @ b
                          k)
                       (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                          @ b
                          (ds3
                             `cast`
                           (Text.ParserCombinators.ReadP.N:ReadP[0]
                                <Yesod.Routes.Class.Route Foundation.App>_R)
                             @ b
                             k)
                          (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                             @ b
                             (ds4
                                `cast`
                              (Text.ParserCombinators.ReadP.N:ReadP[0]
                                   <Yesod.Routes.Class.Route Foundation.App>_R)
                                @ b
                                k)
                             (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                                @ b
                                (ds5
                                   `cast`
                                 (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R)
                                   @ b
                                   k)
                                (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                                   @ b
                                   (ds6
                                      `cast`
                                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                                         <Yesod.Routes.Class.Route Foundation.App>_R)
                                      @ b
                                      k)
                                   (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                                      @ b
                                      (ds7
                                         `cast`
                                       (Text.ParserCombinators.ReadP.N:ReadP[0]
                                            <Yesod.Routes.Class.Route Foundation.App>_R)
                                         @ b
                                         k)
                                      (Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                                         @ b
                                         (ds8
                                            `cast`
                                          (Text.ParserCombinators.ReadP.N:ReadP[0]
                                               <Yesod.Routes.Class.Route Foundation.App>_R)
                                            @ b
                                            k)
                                         (ds9
                                            `cast`
                                          (Text.ParserCombinators.ReadP.N:ReadP[0]
                                               <Yesod.Routes.Class.Route Foundation.App>_R)
                                            @ b
                                            k)))))))))
                   `cast`
                 (Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                           <Yesod.Routes.Class.Route Foundation.App>_R))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute30 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute43
                   Foundation.$fReadRoute31) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute31 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute40
                   Foundation.$fReadRoute32) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute32 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute37
                   Foundation.$fReadRoute33) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute33 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        (Yesod.Routes.Class.Route Foundation.App))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        (Yesod.Routes.Class.Route Foundation.App))
                   Foundation.$fReadRoute34
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           (Yesod.Routes.Class.Route Foundation.App)))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute34 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute36,
                  Foundation.$fReadRoute35
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute35 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.AdminR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
3b96445a80ba51c3ab982463e3c708f0
  $fReadRoute36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AdminR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute37 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute39,
                  Foundation.$fReadRoute38
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute38 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.LogoutR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
78a790b81bbeadd3d78969245ba19747
  $fReadRoute39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LogoutR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute4 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional
                           11#
                           @ b1
                           (\ (a1 :: Model.UsuarioId) ->
                            k1
                              (Foundation.PerfilUsuarioR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute40 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute42,
                  Foundation.$fReadRoute41
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute41 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
10ab592f3e8bbe9cac1a6ccd671a39d6
  $fReadRoute42 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LoginR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute43 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute45,
                  Foundation.$fReadRoute44
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute44 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.CadUsuarioR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
6cc0ad1f41ca8aac2e364576c1f241e5
  $fReadRoute45 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CadUsuarioR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute46 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute48,
                  Foundation.$fReadRoute47
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute47 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ListaCinemaR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
a9049115ac8b771e89f1b575c77945d5
  $fReadRoute48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ListaCinemaR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute49 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute51,
                  Foundation.$fReadRoute50
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
0c2f02c6f7cbd793c3bf647dc429fedd
  $fReadRoute5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PerfilUsuarioR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute50 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.CinemaR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
44ff9facc683dc02860f2324fbbf0aeb
  $fReadRoute51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CinemaR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute52 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute54,
                  Foundation.$fReadRoute53
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute53 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ListaFilmeR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
ed87065e42d1d65956ed7c354e0ea3cd
  $fReadRoute54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ListaFilmeR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute55 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute57,
                  Foundation.$fReadRoute56
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute56 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.FilmeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
48e059500a5e3b8e4c08dac0c33f5801
  $fReadRoute57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FilmeR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute58 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute60,
                  Foundation.$fReadRoute59
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute59 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.PokemonR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute6 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional1
                           11#
                           @ b1
                           (\ (a1 :: Model.CinemaId) ->
                            k1
                              (Foundation.CinemasR a1)
                                `cast`
                              (Sym (Foundation.D:R:RouteApp0[0])))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute7 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
30970df8381f66349f1a5017b4c765a3
  $fReadRoute60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PokemonR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute61 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute63,
                  Foundation.$fReadRoute62
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute62 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.ListaTreinadorR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
0a0f491153a6ed735081df122a310efd
  $fReadRoute63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ListaTreinadorR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute64 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute66,
                  Foundation.$fReadRoute65
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute65 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.TreinadorR
                     `cast`
                   (Sym (Foundation.D:R:RouteApp0[0]))) -}
d82c65f591a96b2e307f624104ad23d5
  $fReadRoute66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TreinadorR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute67 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute69,
                  Foundation.$fReadRoute68
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute68 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta Foundation.HomeR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
acffab134d034bc99f3e4d9d8818b5ca
  $fReadRoute69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HomeR"#) -}
a54100f732f07d234759b832c68b3964
  $fReadRoute7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CinemasR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute70 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute72,
                  Foundation.$fReadRoute71
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute71 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.RobotsR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
2432490aefda6c0872dc59271957af43
  $fReadRoute72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RobotsR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute73 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       (Yesod.Routes.Class.Route Foundation.App))
  {- Strictness: m,
     Unfolding: ((Foundation.$fReadRoute75,
                  Foundation.$fReadRoute74
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <Yesod.Routes.Class.Route Foundation.App>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute74 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (Yesod.Routes.Class.Route Foundation.App
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: Yesod.Routes.Class.Route Foundation.App
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta
                   Foundation.FaviconR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
677236513a2ef13899c846a9890a3409
  $fReadRoute75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FaviconR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute76 ::
    Text.ParserCombinators.ReadP.P
      [Yesod.Routes.Class.Route Foundation.App]
  {- Unfolding: (GHC.Read.list1
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fReadRoute2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <Yesod.Routes.Class.Route Foundation.App>_R))
                   GHC.Read.$fRead()5
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [Yesod.Routes.Class.Route Foundation.App])) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute8 ::
    (Yesod.Routes.Class.Route Foundation.App
     -> Text.ParserCombinators.ReadP.P b1)
    -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 1,
     Unfolding: (\ @ b1
                   (k1 :: Yesod.Routes.Class.Route Foundation.App
                          -> Text.ParserCombinators.ReadP.P b1) ->
                 let {
                   lvl108 :: Text.ParserCombinators.ReadP.P b1
                   = let {
                       lvl109 :: Text.ParserCombinators.ReadP.P b1
                       = Foundation.$woptional3
                           11#
                           @ b1
                           (\ (a1 :: Model.CinemaId) ->
                            Foundation.$woptional2
                              11#
                              @ b1
                              (\ (a2 :: Model.SessaoId) ->
                               k1
                                 (Foundation.PaginaSessaoR a1 a2)
                                   `cast`
                                 (Sym (Foundation.D:R:RouteApp0[0]))))
                     } in
                     Text.Read.Lex.expect2
                       @ b1
                       (\ (a1 :: Text.Read.Lex.Lexeme) ->
                        case a1 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b1
                          Text.Read.Lex.Ident a2
                          -> case GHC.Base.eqString a2 Foundation.$fReadRoute9 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b1
                               GHC.Types.True -> lvl109 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b1
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ (w4 :: ()) -> lvl108) -}
                   = \ (w4 :: ()) -> lvl108
                 } in
                 Text.ParserCombinators.ReadP.Look
                   @ b1
                   (\ (a :: GHC.Base.String) ->
                    (Text.ParserCombinators.ReadP.skipSpaces_skip a)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <()>_R)
                      @ b1
                      k)) -}
efab5987c669add32a2549e24ab81f4c
  $fReadRoute9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PaginaSessaoR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [Yesod.Routes.Class.Route Foundation.App]
                   Foundation.$fReadRoute76) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [Yesod.Routes.Class.Route Foundation.App]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[Yesod.Routes.Class.Route Foundation.App]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[Yesod.Routes.Class.Route Foundation.App]>_R))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fReadRoute2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <Yesod.Routes.Class.Route Foundation.App>_R)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fReadRoute_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   ((GHC.Read.parens1
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       Foundation.$fReadRoute3
                         `cast`
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <Yesod.Routes.Class.Route Foundation.App>_R)
                      @ (Yesod.Routes.Class.Route Foundation.App)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ (Yesod.Routes.Class.Route Foundation.App)))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fRenderMessageAppFormMessage ::
    Text.Shakespeare.I18N.RenderMessage
      Foundation.App Yesod.Form.Types.FormMessage
  DFunId
  {- Arity: 3, Strictness: <L,A><L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Foundation.$fRenderMessageAppFormMessage_$crenderMessage
                  `cast`
                (Sym (Text.Shakespeare.I18N.N:RenderMessage[0]
                          <Foundation.App>_N <Yesod.Form.Types.FormMessage>_N)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fRenderMessageAppFormMessage_$crenderMessage ::
    Foundation.App
    -> [Text.Shakespeare.I18N.Lang]
    -> Yesod.Form.Types.FormMessage
    -> Data.Text.Internal.Text
  {- Arity: 3, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: [Text.Shakespeare.I18N.Lang])
                   (eta :: Yesod.Form.Types.FormMessage) ->
                 Yesod.Form.I18n.English.englishFormMessage eta) -}
a0d81851c2c3b97293b91e34ceefd312
  $fRenderRouteApp :: Yesod.Routes.Class.RenderRoute Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fEqRoute
                  Foundation.$fRenderRouteApp_$crenderRoute -}
ed9c10f24b79826049a068693090d288
  $fRenderRouteApp1 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp2
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
e4f0b0567bbed2f1d310abe2ff6c2de7
  $fRenderRouteApp10 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp9
                   Foundation.$fRenderRouteApp11) -}
0e63ec2e2c55284fd76beb832a757aff
  $fRenderRouteApp11 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp12
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
212ed5b2d15cc73afec0919b1bde3c47
  $fRenderRouteApp12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "cadastrar"#) -}
ce462ed355606708023aeaa941893db6
  $fRenderRouteApp13 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp16
                   Foundation.$fRenderRouteApp14) -}
9671f6cf5a7ecda96150350f89580a1c
  $fRenderRouteApp14 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp15
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
45a00f460a211d0341955df529e34714
  $fRenderRouteApp15 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "cinema"#) -}
c0bb279adced2e446d407fec5be640c0
  $fRenderRouteApp16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "lista"#) -}
524ac379e7ed67d08c86e846473c7dd6
  $fRenderRouteApp17 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "sessao"#) -}
6c57ab64e3b3a97f92c9b8eb2e057a78
  $fRenderRouteApp18 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp17
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
e69c4edbe1759b27d6cd816958ac8a3e
  $fRenderRouteApp19 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp16
                   Foundation.$fRenderRouteApp20) -}
65f3a468bd70c69691c8d9631ddb1c19
  $fRenderRouteApp2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "admin"#) -}
461ed6f080646dd143d4f7bc5ee5c495
  $fRenderRouteApp20 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp21
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
83ed7db04b7cdda641c93297335eb8e7
  $fRenderRouteApp21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "filme"#) -}
420646a6f8767b59655ed78ba8cbc500
  $fRenderRouteApp22 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "pokedex"#) -}
d054b30b29c31070c303b4caec331737
  $fRenderRouteApp23 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp24
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
9a7cd7811de0df7ebfc97b74b5fff9c2
  $fRenderRouteApp24 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "pokemon"#) -}
e7f5fa71f1a3dceb2b5b80e0335c6225
  $fRenderRouteApp25 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp16
                   Foundation.$fRenderRouteApp26) -}
7edc2131201b430abc3303d64726544c
  $fRenderRouteApp26 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp27
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
53c8e2b9520029110f93b815237bbe7f
  $fRenderRouteApp27 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "treinador"#) -}
16694c3b0ee5896c7ddf2690c2b49286
  $fRenderRouteApp28 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp29
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
3e82c39d9b83cccb7aefa5a803f984f1
  $fRenderRouteApp29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "robots.txt"#) -}
54715b608770e68b9eeae7259c5c4151
  $fRenderRouteApp3 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp4
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
f71172d79acc80adc6ebd4827ceb61e0
  $fRenderRouteApp30 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp31
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
e108ff64369a93d041f6bf632bd871d2
  $fRenderRouteApp31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "favicon.ico"#) -}
af8b69df37ca143776a06b18afbf1133
  $fRenderRouteApp32 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "static"#) -}
bcf52d8ec1b3142978873f51eaa15403
  $fRenderRouteApp4 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "logout"#) -}
1c483770dfd0809f5fe2befa6df43cbc
  $fRenderRouteApp5 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp6
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
bbb8f2cfc6b6e2c11cbdabc971140cd2
  $fRenderRouteApp6 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "login"#) -}
a1ed15e61d36a7cf7c5d254cf093da2f
  $fRenderRouteApp7 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Foundation.$fRenderRouteApp8
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
0b72c2ea94e10bf6eea629ad79fc78b5
  $fRenderRouteApp8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "perfil"#) -}
13d295c1ba72198b8b93b64d4614712c
  $fRenderRouteApp9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "usuario"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fRenderRouteApp_$crenderRoute ::
    Yesod.Routes.Class.Route Foundation.App
    -> ([Data.Text.Internal.Text],
        [(Data.Text.Internal.Text, Data.Text.Internal.Text)])
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App) ->
                 case w `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR sub
                   -> case sub
                             `cast`
                           (Yesod.Static.D:R:RouteStatic0[0]) of wild1 { Yesod.Static.StaticRoute x2 y ->
                      (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp32
                         x2,
                       y) }
                   Foundation.FaviconR
                   -> (Foundation.$fRenderRouteApp30,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.RobotsR
                   -> (Foundation.$fRenderRouteApp28,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.HomeR
                   -> (GHC.Types.[] @ Data.Text.Internal.Text,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.TreinadorR
                   -> (Foundation.$fRenderRouteApp26,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.PerfilR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp8
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            Foundation.$fRenderRouteApp27
                            (GHC.Types.:
                               @ Data.Text.Internal.Text
                               (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                                  dyn
                                    `cast`
                                  (Trans
                                       (Model.D:R:KeyTreinador0[0])
                                       (Trans
                                            (Model.N:R:KeyTreinador[0])
                                            (Trans
                                                 (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                 (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                               (GHC.Types.[] @ Data.Text.Internal.Text))),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ListaTreinadorR
                   -> (Foundation.$fRenderRouteApp25,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.PokemonR
                   -> (Foundation.$fRenderRouteApp23,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.PokedexR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp22
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyPokemon0[0])
                                    (Trans
                                         (Model.N:R:KeyPokemon[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.FilmeR
                   -> (Foundation.$fRenderRouteApp20,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.FilmesR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp21
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyFilme0[0])
                                    (Trans
                                         (Model.N:R:KeyFilme[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ListaFilmeR
                   -> (Foundation.$fRenderRouteApp19,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.SessaoR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp15
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyCinema0[0])
                                    (Trans
                                         (Model.N:R:KeyCinema[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp18),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.PaginaSessaoR dyn dyn1
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp15
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyCinema0[0])
                                    (Trans
                                         (Model.N:R:KeyCinema[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            (GHC.Types.:
                               @ Data.Text.Internal.Text
                               Foundation.$fRenderRouteApp17
                               (GHC.Types.:
                                  @ Data.Text.Internal.Text
                                  (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                                     dyn1
                                       `cast`
                                     (Trans
                                          (Model.D:R:KeySessao0[0])
                                          (Trans
                                               (Model.N:R:KeySessao[0])
                                               (Trans
                                                    (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                                    (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                                  (GHC.Types.[] @ Data.Text.Internal.Text)))),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.CinemaR
                   -> (Foundation.$fRenderRouteApp14,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.CinemasR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp15
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyCinema0[0])
                                    (Trans
                                         (Model.N:R:KeyCinema[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            (GHC.Types.[] @ Data.Text.Internal.Text)),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.ListaCinemaR
                   -> (Foundation.$fRenderRouteApp13,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.CadUsuarioR
                   -> (Foundation.$fRenderRouteApp10,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.PerfilUsuarioR dyn
                   -> (GHC.Types.:
                         @ Data.Text.Internal.Text
                         Foundation.$fRenderRouteApp9
                         (GHC.Types.:
                            @ Data.Text.Internal.Text
                            (Web.PathPieces.$fPathPieceInt64_$ctoPathPiece
                               dyn
                                 `cast`
                               (Trans
                                    (Model.D:R:KeyUsuario0[0])
                                    (Trans
                                         (Model.N:R:KeyUsuario[0])
                                         (Trans
                                              (Database.Persist.Sql.Orphan.PersistStore.D:R:BackendKeySqlBackend0[0])
                                              (Database.Persist.Sql.Orphan.PersistStore.N:R:BackendKeySqlBackend[0])))))
                            Foundation.$fRenderRouteApp7),
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LoginR
                   -> (Foundation.$fRenderRouteApp5,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.LogoutR
                   -> (Foundation.$fRenderRouteApp3,
                       GHC.Types.[] @ (Data.Text.Internal.Text, Data.Text.Internal.Text))
                   Foundation.AdminR
                   -> (Foundation.$fRenderRouteApp1,
                       GHC.Types.[]
                         @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fRouteAttrsApp :: Yesod.Routes.Class.RouteAttrs Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fRouteAttrsApp_$crouteAttrs -}
caa0604c413a30c61b5f2624e7c5b49d
  $fRouteAttrsApp1 :: Data.Set.Base.Set Data.Text.Internal.Text
  {- Unfolding: (Foundation.$fRouteAttrsApp_$sfromList
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fRouteAttrsApp_$crouteAttrs ::
    Yesod.Routes.Class.Route Foundation.App
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds of tpl { DEFAULT -> Foundation.$fRouteAttrsApp1 }) -}
8f04714831ebff94eefc2fad119cfb43
  $fRouteAttrsApp_$s$wgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 6, Strictness: <L,U><L,U><L,U><L,U><S,1*U><L,U> -}
d82c4c3ca87c30a36a645313797d7a5e
  $fRouteAttrsApp_$sfromList ::
    [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: [Data.Text.Internal.Text]) ->
                 case ds of wild {
                   [] -> Data.Set.Base.Tip @ Data.Text.Internal.Text
                   : x ds1
                   -> case ds1 of wild1 {
                        []
                        -> case x of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                           Data.Set.Base.Bin
                             @ Data.Text.Internal.Text
                             1#
                             dt
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                             (Data.Set.Base.Tip @ Data.Text.Internal.Text) }
                        : ipv ipv1
                        -> case x of ww { Data.Text.Internal.Text ww1 ww2 ww3 ->
                           case ipv of ww4 { Data.Text.Internal.Text ww7 ww6 ww8 ->
                           case Data.Text.$w$ccompare ww1 ww2 ww3 ww7 ww6 ww8 of wild2 {
                             DEFAULT
                             -> Foundation.$fRouteAttrsApp_$sgo5
                                  ww7
                                  ww6
                                  ww8
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                             GHC.Types.LT
                             -> Foundation.$fRouteAttrsApp_$s$wgo5
                                  ww7
                                  ww6
                                  ww8
                                  ipv1
                                  (Data.Set.Base.Bin
                                     @ Data.Text.Internal.Text
                                     1#
                                     ww
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text)
                                     (Data.Set.Base.Tip @ Data.Text.Internal.Text))
                                  1# } } } } }) -}
c979dc7f99af8fe87d941cc56ece4874
  $fRouteAttrsApp_$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> [Data.Text.Internal.Text]
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><S,1*U> -}
a0d81851c2c3b97293b91e34ceefd312
  $fShowRoute ::
    GHC.Show.Show (Yesod.Routes.Class.Route Foundation.App)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Routes.Class.Route Foundation.App)
                  Foundation.$fShowRoute_$cshowsPrec
                  Foundation.$fShowRoute_$cshow
                  Foundation.$fShowRoute_$cshowList -}
a0d81851c2c3b97293b91e34ceefd312
  $fShowRoute1 ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (Foundation.$fShowRoute_$cshowsPrec
                   Foundation.$fShowRoute2) -}
66475eca4f1769aae363d9c66eb9ef02
  $fShowRoute10 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute51) -}
b5e592699b36d268ff789714dd7fddfc
  $fShowRoute11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PaginaSessaoR "#) -}
7a03753db0b73b1aadcfb9807f604e3d
  $fShowRoute12 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SessaoR "#) -}
3374945eb0876911a783e5cf7f466020
  $fShowRoute13 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute54) -}
10bdc70864364f46880c1862b68c8315
  $fShowRoute14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FilmesR "#) -}
5502b56a91e47ec2fc1a80edc1be4b8f
  $fShowRoute15 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute57) -}
589ccc027b95cb27f20ba7b28248e88a
  $fShowRoute16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PokedexR "#) -}
72d9139a36bdd359c8ae879608d7c295
  $fShowRoute17 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute60) -}
e6aa6c53f8de7c9b8c5e75ad5005951e
  $fShowRoute18 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute63) -}
843c3a174577a7e9f7ccc5ebe5060ff8
  $fShowRoute19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PerfilR "#) -}
140296ec422616f18b7ae15fa8786756
  $fShowRoute2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
62aa108c8dde5fcd5d36adc968c788f5
  $fShowRoute20 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute66) -}
7786fc01ccaef56f315032adc7aa1e4f
  $fShowRoute21 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute69) -}
d59cee9330605caa29cc18d88c808434
  $fShowRoute22 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute72) -}
58b05b815064ee370bac2c52350fc903
  $fShowRoute23 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute75) -}
aa39b3594606892a3a43a1a809ad96a2
  $fShowRoute24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "StaticR "#) -}
46675e6f3b15936d4d1cd3ca58d81f4b
  $fShowRoute3 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute36) -}
d46149b7695b5ab94f6c19465e36bd85
  $fShowRoute4 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute39) -}
0ae2ffdb0420f5ef72509944bfd10fe9
  $fShowRoute5 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute42) -}
42acb90301e34716d22751a9b2284e3f
  $fShowRoute6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PerfilUsuarioR "#) -}
8b22f5a131989fa948d89ae98bb35bbc
  $fShowRoute7 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute45) -}
0e605f5a3aebdd80884dc34a4782b0b4
  $fShowRoute8 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   Foundation.$fReadRoute48) -}
8ba86bc897d3626edc4957b2d99322a2
  $fShowRoute9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CinemasR "#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fShowRoute_$cshow ::
    Yesod.Routes.Class.Route Foundation.App -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
a0d81851c2c3b97293b91e34ceefd312
  $fShowRoute_$cshowList ::
    [Yesod.Routes.Class.Route Foundation.App] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.$fShowRoute1) -}
a0d81851c2c3b97293b91e34ceefd312
  $fShowRoute_$cshowsPrec ::
    GHC.Types.Int
    -> Yesod.Routes.Class.Route Foundation.App -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ (a :: GHC.Types.Int)
                   (ds :: Yesod.Routes.Class.Route Foundation.App) ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   Foundation.StaticR b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Foundation.$fShowRoute24
                             (case b1
                                     `cast`
                                   (Yesod.Static.D:R:RouteStatic0[0]) of ww2 { Yesod.Static.StaticRoute ww3 ww4 ->
                              Yesod.Static.$w$cshowsPrec 11# ww3 ww4 x1 })
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute24
                                (case b1
                                        `cast`
                                      (Yesod.Static.D:R:RouteStatic0[0]) of ww2 { Yesod.Static.StaticRoute ww3 ww4 ->
                                 Yesod.Static.$w$cshowsPrec
                                   11#
                                   ww3
                                   ww4
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1) })) } }
                   Foundation.FaviconR -> Foundation.$fShowRoute23
                   Foundation.RobotsR -> Foundation.$fShowRoute22
                   Foundation.HomeR -> Foundation.$fShowRoute21
                   Foundation.TreinadorR -> Foundation.$fShowRoute20
                   Foundation.PerfilR b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec5 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Foundation.$fShowRoute19 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute19
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Foundation.ListaTreinadorR -> Foundation.$fShowRoute18
                   Foundation.PokemonR -> Foundation.$fShowRoute17
                   Foundation.PokedexR b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec3 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Foundation.$fShowRoute16 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute16
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Foundation.FilmeR -> Foundation.$fShowRoute15
                   Foundation.FilmesR b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec1 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Foundation.$fShowRoute14 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute14
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Foundation.ListaFilmeR -> Foundation.$fShowRoute13
                   Foundation.SessaoR b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Foundation.$fShowRoute12 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute12
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Foundation.PaginaSessaoR b1 b2
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        f :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec 11# b1
                      } in
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec4 11# b2
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Foundation.$fShowRoute11
                             (f (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x1)))
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute11
                                (f (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))))) } }
                   Foundation.CinemaR -> Foundation.$fShowRoute10
                   Foundation.CinemasR b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Foundation.$fShowRoute9 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute9
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Foundation.ListaCinemaR -> Foundation.$fShowRoute8
                   Foundation.CadUsuarioR -> Foundation.$fShowRoute7
                   Foundation.PerfilUsuarioR b1
                   -> case a of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = Model.$w$cshowsPrec6 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11#) of wild2 {
                        GHC.Types.False
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Base.++ @ GHC.Types.Char Foundation.$fShowRoute6 (g x1)
                        GHC.Types.True
                        -> \ (x1 :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Foundation.$fShowRoute6
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x1))) } }
                   Foundation.LoginR -> Foundation.$fShowRoute5
                   Foundation.LogoutR -> Foundation.$fShowRoute4
                   Foundation.AdminR -> Foundation.$fShowRoute3 }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp :: Yesod.Core.Class.Yesod.Yesod Foundation.App
  DFunId
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fRenderRouteApp
                  Foundation.$fYesodApp_$s$dmapproot
                  Foundation.$fYesodApp_$cerrorHandler
                  Foundation.$fYesodApp_$cdefaultLayout
                  Foundation.$fYesodApp_$s$dmurlRenderOverride
                  Foundation.$fYesodApp_$curlParamRenderOverride
                  Foundation.$fYesodApp_$cisAuthorized
                  Foundation.$fYesodApp_$cisWriteRequest
                  Foundation.$fYesodApp_$cauthRoute
                  Foundation.$fYesodApp_$ccleanPath
                  Foundation.$fYesodApp_$cjoinPath
                  Foundation.$fYesodApp_$caddStaticContent
                  Foundation.$fYesodApp_$cmaximumContentLength
                  Foundation.$fYesodApp_$cmakeLogger
                  Foundation.$fYesodApp_$cmessageLoggerSource
                  Foundation.$fYesodApp_$s$dmjsLoader
                  Foundation.$fYesodApp_$s$dmjsAttributes
                  Foundation.$fYesodApp_$cmakeSessionBackend
                  Foundation.$fYesodApp_$cfileUpload
                  Foundation.$fYesodApp_$s$dmshouldLog
                  Foundation.$fYesodApp_$cshouldLogIO
                  Foundation.$fYesodApp_$cyesodMiddleware
                  Foundation.$fYesodApp_$cyesodWithInternalState
                  Foundation.$fYesodApp_$cdefaultMessageWidget -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp1 ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.App))
  {- Arity: 3, Strictness: <L,U><L,C(U)><L,U>,
     Unfolding: (\ (title :: Text.Blaze.Html.Html)
                   (body :: Text.Hamlet.HtmlUrl
                              (Yesod.Routes.Class.Route Foundation.App))
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                 let {
                   lvl108 :: Text.Hamlet.Render
                               (Yesod.Routes.Class.Route Foundation.App)
                             -> Text.Blaze.Internal.MarkupM ()
                     {- Arity: 1 -}
                   = \ (_render :: Text.Hamlet.Render
                                     (Yesod.Routes.Class.Route Foundation.App)) ->
                     Text.Blaze.Internal.Append
                       @ ()
                       @ ()
                       Foundation.$fYesodApp6
                       (Text.Blaze.Internal.Append
                          @ ()
                          @ ()
                          title
                          (Text.Blaze.Internal.Append
                             @ ()
                             @ ()
                             Foundation.$fYesodApp2
                             (body _render)))
                 } in
                 let {
                   lvl109 :: Yesod.Core.Types.GWData
                               (Yesod.Routes.Class.Route Foundation.App)
                   = Yesod.Core.Types.GWData
                       @ (Yesod.Routes.Class.Route Foundation.App)
                       lvl108
                         `cast`
                       (Sym (Yesod.Core.Types.N:Body[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                       (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                         `cast`
                       (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Script
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Script
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (GHC.Base.id
                          @ [Yesod.Core.Types.Stylesheet
                               (Yesod.Routes.Class.Route Foundation.App)])
                         `cast`
                       (Sym (Yesod.Core.Types.N:UniqueList[0]
                                 <Yesod.Core.Types.Stylesheet
                                    (Yesod.Routes.Class.Route Foundation.App)>_R))
                       (Data.Map.Base.Tip
                          @ (GHC.Base.Maybe Data.Text.Internal.Text)
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Data.Text.Internal.Builder.Builder))
                       (GHC.Base.Nothing
                          @ ((Yesod.Routes.Class.Route Foundation.App
                              -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                              -> Data.Text.Internal.Text)
                             -> Text.Julius.Javascript))
                       (Yesod.Core.Types.$fApplicativeWidgetT2
                          @ (Yesod.Routes.Class.Route Foundation.App))
                         `cast`
                       (Sym (Yesod.Core.Types.N:Head[0]
                                 <Yesod.Routes.Class.Route Foundation.App>_R))
                 } in
                 let {
                   lvl110 :: ((),
                              Yesod.Core.Types.GWData
                                (Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                   = (GHC.Tuple.(),
                      lvl109
                        `cast`
                      (Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route
                            (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                      <GHC.Types.IO>_N <Foundation.App>_N)))_R)_R)
                 } in
                 Yesod.Core.Types.$fApplicativeWidgetT3
                   @ GHC.Types.IO
                   @ Foundation.App
                   GHC.Base.$fMonadIO
                   @ ()
                   @ ()
                   (\ (eta1 :: Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                      (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# eta2,
                       (GHC.Tuple.(),
                        Yesod.Core.Types.GWData
                          @ (Yesod.Routes.Class.Route
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))
                          (Yesod.Core.Types.$fApplicativeWidgetT2
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                            `cast`
                          (Sym (Yesod.Core.Types.N:Body[0]
                                    <Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO))>_R))
                          (GHC.Base.Just
                             @ Yesod.Core.Types.Title
                             title `cast` (Sym (Yesod.Core.Types.N:Title[0])))
                            `cast`
                          (Sym (Data.Monoid.N:Last[0]) <Yesod.Core.Types.Title>_N)
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Script
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))])
                            `cast`
                          (Sym (Yesod.Core.Types.N:UniqueList[0]
                                    <Yesod.Core.Types.Script
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))>_R))
                          (GHC.Base.id
                             @ [Yesod.Core.Types.Stylesheet
                                  (Yesod.Routes.Class.Route
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO)))])
                            `cast`
                          (Sym (Yesod.Core.Types.N:UniqueList[0]
                                    <Yesod.Core.Types.Stylesheet
                                       (Yesod.Routes.Class.Route
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.WidgetT
                                                Foundation.App GHC.Types.IO)))>_R))
                          (Data.Map.Base.Tip
                             @ (GHC.Base.Maybe Data.Text.Internal.Text)
                             @ ((Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Data.Text.Internal.Builder.Builder))
                          (GHC.Base.Nothing
                             @ ((Yesod.Routes.Class.Route
                                   (Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))
                                 -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                 -> Data.Text.Internal.Text)
                                -> Text.Julius.Javascript))
                          (Yesod.Core.Types.$fApplicativeWidgetT2
                             @ (Yesod.Routes.Class.Route
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO))))
                            `cast`
                          (Sym (Yesod.Core.Types.N:Head[0]
                                    <Yesod.Routes.Class.Route
                                       (Yesod.Core.Class.Handler.HandlerSite
                                          (Yesod.Core.Types.WidgetT
                                             Foundation.App GHC.Types.IO))>_R))) #))
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       ((,)
                                          <()>_R
                                          (Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                          <GHC.Types.IO>_N
                                                          <Foundation.App>_N)))_R)_R)_R))
                        (Sym (Yesod.Core.Types.N:WidgetT[0]
                                  <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   (\ (ds :: ())
                      (eta1 :: Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))[OneShot]
                      (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (# eta2, lvl110 #))
                     `cast`
                   (<()>_R
                    ->_R Trans
                             (<Yesod.Core.Types.HandlerData
                                 Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                              ->_R Sym (GHC.Types.N:IO[0]
                                            ((,)
                                               <()>_R
                                               (Yesod.Core.Types.GWData
                                                  (Yesod.Routes.Class.Route
                                                     (Sym (Yesod.Core.Class.Handler.D:R:HandlerSiteWidgetT[0]
                                                               <GHC.Types.IO>_N
                                                               <Foundation.App>_N)))_R)_R)_R))
                             (Sym (Yesod.Core.Types.N:WidgetT[0]
                                       <Foundation.App>_N <GHC.Types.IO>_N <()>_N)))
                   eta) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp10 ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ @ res
                   (w :: Yesod.Core.Content.ToTypedContent res)
                   (w1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res)
                   (w2 :: Yesod.Core.Types.HandlerData
                            Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { Yesod.Core.Types.HandlerData ww1 ww2 ww3 ww4 ww6 ->
                 Foundation.$w$cyesodMiddleware
                   @ res
                   w1
                   ww1
                   ww2
                   ww3
                   ww4
                   ww6
                   w3 }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp11 ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (a :: Foundation.App)
                   (b :: Control.Monad.Logger.LogSource)
                   (c :: Control.Monad.Logger.LogLevel)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta2, Yesod.Core.Class.Yesod.defaultShouldLog b c #)) -}
ad216c2f677ca2ae9bc7878a2091067a
  $fYesodApp12 :: Yesod.Core.Types.FileUpload
  {- Strictness: m1,
     Unfolding: (Yesod.Core.Types.FileUploadMemory
                   Foundation.$fYesodApp13) -}
07a4134e64a4aa9ec07cac062504af8d
  $fYesodApp13 ::
    Data.ByteString.Internal.ByteString
    -> Network.Wai.Parse.FileInfo ()
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> GHC.Types.IO Data.ByteString.Lazy.Internal.ByteString
  {- Arity: 3, Strictness: <L,A><L,A><L,U>,
     Unfolding: InlineRule (3, True, True)
                (\ (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: Network.Wai.Parse.FileInfo ())
                   (w3 :: GHC.Types.IO Data.ByteString.Internal.ByteString) ->
                 Network.Wai.Parse.$wlbsBackEnd
                   @ GHC.Types.IO
                   @ Data.ByteString.Internal.ByteString
                   @ (Network.Wai.Parse.FileInfo ())
                   GHC.Base.$fMonadIO
                   w3) -}
2658e11322bf92e7b22c9881d05bfa76
  $fYesodApp14 :: Yesod.Core.Types.FileUpload
  {- Strictness: m2,
     Unfolding: (Yesod.Core.Types.FileUploadDisk
                   (Network.Wai.Parse.tempFileBackEnd1
                      @ (Network.Wai.Parse.FileInfo ())
                      @ Data.ByteString.Internal.ByteString)
                     `cast`
                   (<Control.Monad.Trans.Resource.InternalState>_R
                    ->_R <Data.ByteString.Internal.ByteString>_R
                    ->_R <Network.Wai.Parse.FileInfo ()>_R
                    ->_R <GHC.Types.IO Data.ByteString.Internal.ByteString>_R
                    ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp15 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmakeSessionBackend w1) -}
1dd4ddfb1990a3f2ac510e033fd5c0e7
  $fYesodApp16 :: GHC.Integer.Type.Integer
  {- Unfolding: (7200000000000000) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp17 ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Yesod.Core.Types.Logger)
                   (w2 :: Language.Haskell.TH.Syntax.Loc)
                   (w3 :: Control.Monad.Logger.LogSource)
                   (w4 :: Control.Monad.Logger.LogLevel)
                   (w5 :: System.Log.FastLogger.LogStr.LogStr)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$w$cmessageLoggerSource w1 w2 w3 w4 w5 w6) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp18 ::
    Foundation.App
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.Logger #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: Foundation.App)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    case x of wild { Foundation.App ds ds1 ds2 ds3 ds4 -> ds4 } #)) -}
85115fe77aa24229ff16f6ffcdd0e508
  $fYesodApp19 :: GHC.Word.Word64
  {- Unfolding: (case {__pkg_ccall ghc-prim-0.5.0.0 hs_word64ToInt64 GHC.Prim.Word64#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Int64# #)}
                        1024L##
                        GHC.Prim.realWorld# of wild { (#,#) ds1 ds2 ->
                 case {__pkg_ccall ghc-prim-0.5.0.0 hs_word64ToInt64 GHC.Prim.Word64#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Int64# #)}
                        2L##
                        GHC.Prim.realWorld# of wild1 { (#,#) ds4 ds5 ->
                 case {__pkg_ccall ghc-prim-0.5.0.0 hs_timesInt64 GHC.Prim.Int64#
                                                                  -> GHC.Prim.Int64#
                                                                  -> GHC.Prim.State#
                                                                       GHC.Prim.RealWorld
                                                                  -> (# GHC.Prim.State#
                                                                          GHC.Prim.RealWorld,
                                                                        GHC.Prim.Int64# #)}
                        ds5
                        ds2
                        GHC.Prim.realWorld# of wild2 { (#,#) ds6 ds3 ->
                 case {__pkg_ccall ghc-prim-0.5.0.0 hs_int64ToWord64 GHC.Prim.Int64#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Word64# #)}
                        ds3
                        GHC.Prim.realWorld# of wild3 { (#,#) ds7 ds8 ->
                 case {__pkg_ccall ghc-prim-0.5.0.0 hs_word64ToInt64 GHC.Prim.Word64#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Int64# #)}
                        ds8
                        GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                 case {__pkg_ccall ghc-prim-0.5.0.0 hs_timesInt64 GHC.Prim.Int64#
                                                                  -> GHC.Prim.Int64#
                                                                  -> GHC.Prim.State#
                                                                       GHC.Prim.RealWorld
                                                                  -> (# GHC.Prim.State#
                                                                          GHC.Prim.RealWorld,
                                                                        GHC.Prim.Int64# #)}
                        ds12
                        ds2
                        GHC.Prim.realWorld# of wild5 { (#,#) ds13 ds14 ->
                 case {__pkg_ccall ghc-prim-0.5.0.0 hs_int64ToWord64 GHC.Prim.Int64#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Word64# #)}
                        ds14
                        GHC.Prim.realWorld# of wild6 { (#,#) ds15 ds16 ->
                 GHC.Word.W64# ds16 } } } } } } }) -}
c0180e0e94b023cd0115fffa7cdaa998
  $fYesodApp2 :: Text.Blaze.Internal.Markup
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp3
                   GHC.Tuple.()) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp20 ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (5, True, True)
                (\ (ds :: Data.Text.Internal.Text)
                   (ds1 :: Data.Text.Internal.Text)
                   (ds2 :: Data.ByteString.Lazy.Internal.ByteString)
                   (eta2 :: Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta3,
                    GHC.Base.Nothing
                      @ (Data.Either.Either
                           Data.Text.Internal.Text
                           (Yesod.Routes.Class.Route Foundation.App,
                            [(Data.Text.Internal.Text, Data.Text.Internal.Text)])) #)) -}
94b7b9a5486ac6ccd0a2aa0af10ec5a1
  $fYesodApp21 ::
    (Data.Text.Internal.Text, Data.Text.Internal.Text)
    -> (Data.ByteString.Internal.ByteString,
        GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Arity: 1,
     Unfolding: (\ (ds :: (Data.Text.Internal.Text,
                           Data.Text.Internal.Text)) ->
                 (case ds of wild { (,) x y -> Data.Text.Encoding.encodeUtf8 x },
                  case ds of wild { (,) x y ->
                  case y of wild1 { Data.Text.Internal.Text dt1 dt2 dt3 ->
                  case Data.Text.Internal.empty_ of wild2 { Data.Text.Internal.Text dt4 dt5 dt6 ->
                  case GHC.Prim.tagToEnum#
                         @ GHC.Types.Bool
                         (GHC.Prim.==# dt3 dt6) of wild3 {
                    GHC.Types.False
                    -> GHC.Base.Just
                         @ Data.ByteString.Internal.ByteString
                         (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                    GHC.Types.True
                    -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.ByteArray#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.Word#
                                                                                                          -> GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                          -> (# GHC.Prim.State#
                                                                                                                  GHC.Prim.RealWorld,
                                                                                                                GHC.Prim.Int# #)}
                              dt1
                              (GHC.Prim.int2Word# dt2)
                              dt4
                              (GHC.Prim.int2Word# dt5)
                              (GHC.Prim.int2Word# dt3)
                              GHC.Prim.realWorld# of wild4 { (#,#) ds11 ds12 ->
                       case ds12 of wild5 {
                         DEFAULT
                         -> GHC.Base.Just
                              @ Data.ByteString.Internal.ByteString
                              (Data.Text.Encoding.$wencodeUtf8 dt1 dt2 dt3)
                         0#
                         -> GHC.Base.Nothing
                              @ Data.ByteString.Internal.ByteString } } } } } })) -}
2714084b487b54c475279ef2b8af38c0
  $fYesodApp22 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1 -}
e40815990da3bafcca8f1243b13d4d8b
  $fYesodApp23 :: [Data.Text.Internal.Text]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Data.Text.Internal.Text
                   Data.Text.Internal.empty_
                   (GHC.Types.[] @ Data.Text.Internal.Text)) -}
6ecb72522488c5fda2c425eff9afe7e9
  $fYesodApp24 :: Data.Text.Internal.Text -> Data.Text.Internal.Text
  {- Arity: 1,
     Unfolding: (\ (t :: Data.Text.Internal.Text) ->
                 case t of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 let {
                   end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                 } in
                 letrec {
                   $wloop_all :: GHC.Prim.Int# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                   = \ (ww :: GHC.Prim.Int#) ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww end) of wild1 {
                       GHC.Types.False
                       -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                          case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.geWord# r# 55296##) of wild2 {
                            GHC.Types.False
                            -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                 DEFAULT -> GHC.Types.False '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                            GHC.Types.True
                            -> case GHC.Prim.tagToEnum#
                                      @ GHC.Types.Bool
                                      (GHC.Prim.leWord# r# 56319##) of wild3 {
                                 GHC.Types.False
                                 -> case GHC.Prim.chr# (GHC.Prim.word2Int# r#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 1#) }
                                 GHC.Types.True
                                 -> case GHC.Prim.indexWord16Array#
                                           dt
                                           (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                    case GHC.Prim.chr#
                                           (GHC.Prim.+#
                                              (GHC.Prim.+#
                                                 (GHC.Prim.uncheckedIShiftL#
                                                    (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                    10#)
                                                 (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                              65536#) of wild4 {
                                      DEFAULT -> GHC.Types.False
                                      '-'# -> $wloop_all (GHC.Prim.+# ww 2#) } } } } }
                       GHC.Types.True -> GHC.Types.True }
                 } in
                 case $wloop_all dt1 of wild1 {
                   GHC.Types.False -> wild
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# 1# dt2) of wild3 {
                        GHC.Types.False
                        -> case Data.Text.$witerN
                                  Foundation.$fYesodApp25
                                  dt
                                  dt1
                                  dt2 of ww4 { DEFAULT ->
                           case GHC.Prim.-# dt2 ww4 of wild5 {
                             DEFAULT -> Data.Text.Internal.Text dt (GHC.Prim.+# dt1 ww4) wild5
                             0# -> Data.Text.Internal.empty } }
                        GHC.Types.True -> Data.Text.Internal.empty } } }) -}
8b87fe794edd003ad491e6190873f125
  $fYesodApp25 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
c843f6d3e44fc0ffe2600e195f655d01
  $fYesodApp26 :: Data.Text.Internal.Text -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Data.Text.Internal.Text) ->
                 case x of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# dt2 0#) of wild1 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp27 ::
    GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ (Yesod.Routes.Class.Route Foundation.App)
                   Foundation.LoginR `cast` (Sym (Foundation.D:R:RouteApp0[0]))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp28 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 2,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp37
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <Network.Wai.Internal.Request>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0] <Network.Wai.Internal.Request>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    case GHC.List.elem
                           @ Network.HTTP.Types.Method.Method
                           Data.ByteString.Internal.$fEqByteString
                           (case ipv1 of wild { Network.Wai.Internal.Request ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                            ds2 })
                           Foundation.$fYesodApp29 of wild {
                      GHC.Types.False -> GHC.Types.True
                      GHC.Types.True -> GHC.Types.False } #) }) -}
87164ef57d0706c4c4c274e4d37981fd
  $fYesodApp29 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp36
                   Foundation.$fYesodApp30) -}
9042c8f3c624fe5fbdc6449e2aa93b25
  $fYesodApp3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp4) -}
8679b44fcf049d1c67b01646c52e21e2
  $fYesodApp30 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp35
                   Foundation.$fYesodApp31) -}
3194547c4c9e3f274e7a082c8b2f3d79
  $fYesodApp31 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp34
                   Foundation.$fYesodApp32) -}
ce54cb2bb49b3d68c0b8f0516073698d
  $fYesodApp32 :: [Network.HTTP.Types.Method.Method]
  {- Unfolding: (GHC.Types.:
                   @ Network.HTTP.Types.Method.Method
                   Foundation.$fYesodApp33
                   (GHC.Types.[] @ Network.HTTP.Types.Method.Method)) -}
c539c837c8ce568a28ade2b8abcf95f1
  $fYesodApp33 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "TRACE"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
277d7f0c297a4d219a30f44885f061d7
  $fYesodApp34 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "OPTIONS"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
2557900b05067c714c605d8637dbe7dd
  $fYesodApp35 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "HEAD"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
c7cbd8f6b4a9a832431a394b5afe69d7
  $fYesodApp36 :: Network.HTTP.Types.Method.Method
  {- Unfolding: (case GHC.Prim.newMutVar#
                        @ GHC.ForeignPtr.Finalizers
                        @ GHC.Prim.RealWorld
                        GHC.ForeignPtr.NoFinalizers
                        GHC.Prim.realWorld# of ds1 { (#,#) ipv ipv1 ->
                 let {
                   addr# :: GHC.Prim.Addr# = "GET"#
                 } in
                 case {__pkg_ccall bytestring-0.10.8.1@bytestring-0.10.8.1 strlen GHC.Prim.Addr#
                                                                                  -> GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld
                                                                                  -> (# GHC.Prim.State#
                                                                                          GHC.Prim.RealWorld,
                                                                                        GHC.Prim.Word# #)}
                        addr#
                        ipv of wild { (#,#) ds3 ds4 ->
                 Data.ByteString.Internal.PS
                   addr#
                   (GHC.ForeignPtr.PlainForeignPtr ipv1)
                   0#
                   (GHC.Prim.word2Int# ds4) } }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp37 ::
    Yesod.Core.Types.HandlerT
      Foundation.App GHC.Types.IO Network.Wai.Internal.Request
  {- Unfolding: (Yesod.Core.Handler.waiRequest
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Yesod.Core.Class.Yesod.$dmdefaultLayout_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp38 ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 4, Strictness: <S,1*U><L,A><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (ds :: Yesod.Routes.Class.Route Foundation.App)
                   (ds1 :: GHC.Types.Bool)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ds `cast` (Foundation.D:R:RouteApp0[0]) of wild {
                   DEFAULT -> Foundation.$fYesodApp46 eta eta1
                   Foundation.CadUsuarioR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.LoginR -> (# eta1, Yesod.Core.Types.Authorized #)
                   Foundation.AdminR -> Foundation.$fYesodApp39 eta eta1 }) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp39 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp_m1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> (# ipv, Yesod.Core.Types.AuthenticationRequired #)
                   GHC.Base.Just x
                   -> case Text.Read.readEither6
                             @ Model.Usuario
                             (Text.ParserCombinators.ReadP.run
                                @ Model.Usuario
                                Foundation.$fYesodApp44
                                (case x of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                                 case Data.Text.Encoding.$wdecodeUtf8With
                                        Data.Text.Encoding.Error.lenientDecode
                                        ww1
                                        ww2
                                        ww3
                                        ww4 of wild1 { Data.Text.Internal.Text dt dt1 dt2 ->
                                 let {
                                   end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                                 } in
                                 letrec {
                                   $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                     {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                                   = \ (ww7 :: GHC.Prim.Int#) ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>=# ww7 end) of wild2 {
                                       GHC.Types.False
                                       -> case GHC.Prim.indexWord16Array# dt ww7 of r# { DEFAULT ->
                                          case GHC.Prim.tagToEnum#
                                                 @ GHC.Types.Bool
                                                 (GHC.Prim.geWord# r# 55296##) of wild3 {
                                            GHC.Types.False
                                            -> GHC.Types.:
                                                 @ GHC.Types.Char
                                                 (GHC.Types.C#
                                                    (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                 ($wunfold (GHC.Prim.+# ww7 1#))
                                            GHC.Types.True
                                            -> case GHC.Prim.tagToEnum#
                                                      @ GHC.Types.Bool
                                                      (GHC.Prim.leWord# r# 56319##) of wild4 {
                                                 GHC.Types.False
                                                 -> GHC.Types.:
                                                      @ GHC.Types.Char
                                                      (GHC.Types.C#
                                                         (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                      ($wunfold (GHC.Prim.+# ww7 1#))
                                                 GHC.Types.True
                                                 -> case GHC.Prim.indexWord16Array#
                                                           dt
                                                           (GHC.Prim.+# ww7 1#) of r#1 { DEFAULT ->
                                                    GHC.Types.:
                                                      @ GHC.Types.Char
                                                      (GHC.Types.C#
                                                         (GHC.Prim.chr#
                                                            (GHC.Prim.+#
                                                               (GHC.Prim.+#
                                                                  (GHC.Prim.uncheckedIShiftL#
                                                                     (GHC.Prim.-#
                                                                        (GHC.Prim.word2Int# r#)
                                                                        55296#)
                                                                     10#)
                                                                  (GHC.Prim.-#
                                                                     (GHC.Prim.word2Int# r#1)
                                                                     56320#))
                                                               65536#)))
                                                      ($wunfold (GHC.Prim.+# ww7 2#)) } } } }
                                       GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                                 } in
                                 $wunfold dt1 } })) of wild1 {
                        []
                        -> case Foundation.$fYesodApp43
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     Yesod.Core.Types.AuthResult #)
                           of {}
                        : x1 ds
                        -> case ds of wild2 {
                             []
                             -> case x1 of wild3 { Model.Usuario ds2 ds3 ds4 ->
                                case ds2 of wild4 { Data.Text.Internal.Text dt dt1 dt2 ->
                                case Foundation.$fRenderRouteApp2 of wild5 { Data.Text.Internal.Text dt3 dt4 dt5 ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==# dt2 dt5) of wild6 {
                                  GHC.Types.False -> (# ipv, Foundation.$fYesodApp41 #)
                                  GHC.Types.True
                                  -> case {__pkg_ccall text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00 _hs_text_memcmp GHC.Prim.ByteArray#
                                                                                                                        -> GHC.Prim.Word#
                                                                                                                        -> GHC.Prim.ByteArray#
                                                                                                                        -> GHC.Prim.Word#
                                                                                                                        -> GHC.Prim.Word#
                                                                                                                        -> GHC.Prim.State#
                                                                                                                             GHC.Prim.RealWorld
                                                                                                                        -> (# GHC.Prim.State#
                                                                                                                                GHC.Prim.RealWorld,
                                                                                                                              GHC.Prim.Int# #)}
                                            dt
                                            (GHC.Prim.int2Word# dt1)
                                            dt3
                                            (GHC.Prim.int2Word# dt4)
                                            (GHC.Prim.int2Word# dt2)
                                            GHC.Prim.realWorld# of wild7 { (#,#) ds11 ds12 ->
                                     case ds12 of wild8 {
                                       DEFAULT -> (# ipv, Foundation.$fYesodApp41 #)
                                       0# -> (# ipv, Yesod.Core.Types.Authorized #) } } } } } }
                             : ipv2 ipv3
                             -> case Foundation.$fYesodApp40
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          Yesod.Core.Types.AuthResult #)
                                of {} } } } }) -}
e3ab89f705d658e4d4cfafd80ebc5d47
  $fYesodApp4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp5) -}
ade7af4e3b35a3186c99234236f90bd1
  $fYesodApp40 :: Model.Usuario
  {- Strictness: x -}
f1cfe20e54c3b00b4fa1d0ee7fdddfff
  $fYesodApp41 :: Yesod.Core.Types.AuthResult
  {- Unfolding: (Yesod.Core.Types.Unauthorized
                   Foundation.$fYesodApp42) -}
d190825804fce2aa2f59bfd019d7be85
  $fYesodApp42 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "VC NAO PERMISSAO"#) -}
c3c449e8e531a739195f4eeff6ca8ad3
  $fYesodApp43 :: Model.Usuario
  {- Strictness: x -}
96447a5523c636be03e02613a964d00e
  $fYesodApp44 :: Text.ParserCombinators.ReadP.P Model.Usuario
  {- Unfolding: ((GHC.Read.parens1
                    @ Model.Usuario
                    Model.$fReadUsuario3
                      `cast`
                    (Trans
                         (<Text.ParserCombinators.ReadPrec.Prec>_R
                          ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                        <Model.Usuario>_R))
                         (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                   <Model.Usuario>_R)))
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.N:ReadP[0] <Model.Usuario>_R)
                   @ Model.Usuario
                   (Text.Read.readEither5 @ Model.Usuario)) -}
357def59d0927cf6b957a2f4bbfcbde2
  $fYesodApp45 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "_USR"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp46 ::
    Yesod.Core.Types.HandlerData
      Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Core.Types.AuthResult #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (r :: Yesod.Core.Types.HandlerData
                           Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodApp_m1
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_N)
                         r)
                        `cast`
                      (GHC.Types.N:IO[0]
                           <GHC.Base.Maybe Data.ByteString.Internal.ByteString>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> (# ipv, Yesod.Core.Types.AuthenticationRequired #)
                   GHC.Base.Just x -> (# ipv, Yesod.Core.Types.Authorized #) } }) -}
946ffcffff1876cc9f89dc64307a12a7
  $fYesodApp5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "</h1>\n"#) -}
3c88788f0fa2565668a02bc7a4827fe7
  $fYesodApp6 :: Text.Blaze.Internal.Markup
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Foundation.$fYesodApp7
                   GHC.Tuple.()) -}
3d7e7f5521b601ae2997a50ef854a2a0
  $fYesodApp7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Foundation.$fYesodApp8) -}
a473f02c766dd85dbd995b8e5e20c655
  $fYesodApp8 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Foundation.$fYesodApp9) -}
9405966277e667f3ad5014134ffddb17
  $fYesodApp9 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1>"#) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$caddStaticContent ::
    Data.Text.Internal.Text
    -> Data.Text.Internal.Text
    -> Data.ByteString.Lazy.Internal.ByteString
    -> Yesod.Core.Types.HandlerT
         Foundation.App
         GHC.Types.IO
         (GHC.Base.Maybe
            (Data.Either.Either
               Data.Text.Internal.Text
               (Yesod.Routes.Class.Route Foundation.App,
                [(Data.Text.Internal.Text, Data.Text.Internal.Text)])))
  {- Arity: 5, HasNoCafRefs, Strictness: <L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp20
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R <Data.ByteString.Lazy.Internal.ByteString>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0]
                                         <GHC.Base.Maybe
                                            (Data.Either.Either
                                               Data.Text.Internal.Text
                                               (Yesod.Routes.Class.Route Foundation.App,
                                                [(Data.Text.Internal.Text,
                                                  Data.Text.Internal.Text)]))>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <GHC.Base.Maybe
                                       (Data.Either.Either
                                          Data.Text.Internal.Text
                                          (Yesod.Routes.Class.Route Foundation.App,
                                           [(Data.Text.Internal.Text,
                                             Data.Text.Internal.Text)]))>_N))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cauthRoute ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>m2,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Foundation.App) -> Foundation.$fYesodApp27) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$ccleanPath ::
    Foundation.App
    -> [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 2, Strictness: <L,A><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App) (w1 :: [Data.Text.Internal.Text]) ->
                 Foundation.$w$ccleanPath w1) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cdefaultLayout ::
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cdefaultMessageWidget ::
    Text.Blaze.Html.Html
    -> Text.Hamlet.HtmlUrl (Yesod.Routes.Class.Route Foundation.App)
    -> Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U><L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp1
                  `cast`
                (<Text.Blaze.Html.Html>_R
                 ->_R <Text.Hamlet.HtmlUrl
                         (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R Sym (Yesod.Core.Types.N:WidgetT[0]
                               <Foundation.App>_N <GHC.Types.IO>_N <()>_N)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cerrorHandler ::
    Yesod.Core.Types.ErrorResponse
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.TypedContent
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cfileUpload ::
    Foundation.App
    -> Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 2, Strictness: <L,A><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Network.Wai.Internal.RequestBodyLength) ->
                 Foundation.$w$cfileUpload w1) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cisAuthorized ::
    Yesod.Routes.Class.Route Foundation.App
    -> GHC.Types.Bool
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO Yesod.Core.Types.AuthResult
  {- Arity: 4, Strictness: <S,1*U><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp38
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R <GHC.Types.Bool>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N
                                    <GHC.Types.IO>_N
                                    <Yesod.Core.Types.AuthResult>_N))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cisWriteRequest ::
    Yesod.Routes.Class.Route Foundation.App
    -> Yesod.Core.Types.HandlerT
         Foundation.App GHC.Types.IO GHC.Types.Bool
  {- Arity: 3, Strictness: <L,A>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, True)
                (\ (w :: Yesod.Routes.Class.Route Foundation.App)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Foundation.$fYesodApp28 eta eta1)
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.App>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <GHC.Types.Bool>_N))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cjoinPath ::
    Foundation.App
    -> Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 4, Strictness: <L,A><L,1*U(U,U,U)><L,1*U><L,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: Data.Text.Internal.Text)
                   (w2 :: [Data.Text.Internal.Text])
                   (w3 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 Foundation.$w$cjoinPath w1 w2 w3) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cmakeLogger ::
    Foundation.App -> GHC.Types.IO Yesod.Core.Types.Logger
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(A,A,A,A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp18
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.Logger>_R)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cmakeSessionBackend ::
    Foundation.App
    -> GHC.Types.IO (GHC.Base.Maybe Yesod.Core.Types.SessionBackend)
  {- Arity: 2, Strictness: <L,A><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp15
                  `cast`
                (<Foundation.App>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe Yesod.Core.Types.SessionBackend>_R)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cmaximumContentLength ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> GHC.Base.Maybe GHC.Word.Word64
  {- Arity: 2, Strictness: <L,A><L,A>m2, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, True)
                (\ (w :: Foundation.App)
                   (w1 :: GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)) ->
                 GHC.Base.Just @ GHC.Word.Word64 Foundation.$fYesodApp19) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cmessageLoggerSource ::
    Foundation.App
    -> Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Types.IO ()
  {- Arity: 7,
     Strictness: <L,A><L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp17
                  `cast`
                (<Foundation.App>_R
                 ->_R <Yesod.Core.Types.Logger>_R
                 ->_R <Language.Haskell.TH.Syntax.Loc>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R <System.Log.FastLogger.LogStr.LogStr>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cshouldLogIO ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><L,A><L,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp11
                  `cast`
                (<Foundation.App>_R
                 ->_R <Control.Monad.Logger.LogSource>_R
                 ->_R <Control.Monad.Logger.LogLevel>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$curlParamRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><L,A>,
     Unfolding: InlineRule (3, True, True)
                (\ (y :: Foundation.App)
                   (route :: Yesod.Routes.Class.Route Foundation.App)
                   (params :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cyesodMiddleware ::
    Yesod.Core.Content.ToTypedContent res =>
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
  {- Arity: 4,
     Strictness: <L,A><L,1*C1(C1(U(U,U)))><S(SSSSL),1*U(U,U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp10
                  `cast`
                (forall (res :: <*>_N).
                 <Yesod.Core.Content.ToTypedContent res>_R
                 ->_R <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <res>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <res>_N))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$cyesodWithInternalState ::
    Foundation.App
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
    -> (Control.Monad.Trans.Resource.InternalState -> GHC.Types.IO a)
    -> GHC.Types.IO a
  {- Arity: 4, Strictness: <L,A><L,A><L,1*C1(C(U))><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, True)
                (\ @ a
                   (ds :: Foundation.App)
                   (ds1 :: GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App))
                   (eta2 :: Control.Monad.Trans.Resource.InternalState
                            -> GHC.Types.IO a)
                   (eta3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (Control.Exception.Base.bracket
                    @ Control.Monad.Trans.Resource.InternalState
                    @ ()
                    @ a
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$screateInternalState
                    Yesod.Core.Class.Yesod.$dmyesodWithInternalState_$scloseInternalState
                    eta2)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   eta3)
                  `cast`
                (forall (a :: <*>_N).
                 <Foundation.App>_R
                 ->_R <GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)>_R
                 ->_R <Control.Monad.Trans.Resource.InternalState
                       -> GHC.Types.IO a>_R
                 ->_R Sym (GHC.Types.N:IO[0] <a>_R)) -}
4eac12dfc7f5601e1d110e28128db638
  $fYesodApp_$d(%,,,,%) ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO, GHC.Base.$fApplicativeIO)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$s$dmapproot :: Yesod.Core.Types.Approot Foundation.App
  {- HasNoCafRefs,
     Unfolding: InlineRule (-1, True, True)
                (Yesod.Core.Types.ApprootRelative @ Foundation.App) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$s$dmjsAttributes ::
    Foundation.App
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App) ->
                 GHC.Types.[]
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$s$dmjsLoader ::
    Foundation.App
    -> Yesod.Core.Types.ScriptLoadPosition Foundation.App
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App) ->
                 Yesod.Core.Types.BottomOfBody @ Foundation.App) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$s$dmshouldLog ::
    Foundation.App
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,A><S,1*U>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App)
                   (eta2 :: Control.Monad.Logger.LogSource)
                   (eta3 :: Control.Monad.Logger.LogLevel) ->
                 Yesod.Core.Class.Yesod.defaultShouldLog eta2 eta3) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_$s$dmurlRenderOverride ::
    Foundation.App
    -> Yesod.Routes.Class.Route Foundation.App
    -> GHC.Base.Maybe Data.ByteString.Builder.Internal.Builder
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds :: Foundation.App)
                   (ds1 :: Yesod.Routes.Class.Route Foundation.App) ->
                 GHC.Base.Nothing @ Data.ByteString.Builder.Internal.Builder) -}
701ba848e4dd4244179e90aba58668eb
  $fYesodApp_$s$fMonadHandlerHandlerT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cp1MonadHandler
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodApp_$d(%,,,,%))
                  (Yesod.Core.Class.Handler.$fMonadHandlerHandlerT_$cliftHandlerT
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodApp_$d(%,,,,%)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodApp_m1 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (GHC.Base.Maybe Data.ByteString.Internal.ByteString)
  {- Unfolding: (Yesod.Core.Handler.lookupSessionBS
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Foundation.$fYesodApp_$s$fMonadHandlerHandlerT @ Foundation.App)
                   Foundation.$fYesodApp45) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp :: Yesod.Persist.Core.YesodPersist Foundation.App
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.App
                  Foundation.$fYesodPersistApp_$cp1YesodPersist
                  Foundation.$fYesodPersistApp_$crunDB -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp1 ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerData
         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: (\ @ a
                   (action :: Yesod.Persist.Core.YesodDB Foundation.App a)
                   (eta :: Yesod.Core.Types.HandlerData
                             Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Foundation.$fYesodPersistApp4
                         `cast`
                       (Yesod.Core.Types.N:HandlerT[0]
                            <Foundation.App>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.D:R:HandlerSiteHandlerT[0]
                                 <GHC.Types.IO>_N <Foundation.App>_N))
                         eta)
                        `cast`
                      (GHC.Types.N:IO[0] <Foundation.App>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 ((Data.Pool.withResource
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ Database.Persist.Sql.Types.Internal.SqlBackend
                     @ a
                     (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                        @ Foundation.App)
                     (case ipv1 of wild { Foundation.App ds ds2 ds3 ds4 ds5 -> ds3 })
                     (Database.Persist.Sql.Run.runSqlConn
                        @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                        @ Database.Persist.Sql.Types.Internal.SqlBackend
                        @ a
                        (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT
                           @ Foundation.App)
                        Foundation.$fYesodPersistApp2
                          `cast`
                        (GHC.Classes.(%,%)
                           <Database.Persist.Class.PersistStore.IsPersistBackend
                              Database.Persist.Sql.Types.Internal.SqlBackend>_N
                           ((Data.Type.Equality.~)
                              <*>_N
                              (Sym (Database.Persist.Sql.Types.Internal.D:R:BaseBackendSqlBackend[0]))
                              <Database.Persist.Sql.Types.Internal.SqlBackend>_N)_N)_R
                        action
                          `cast`
                        (Control.Monad.Trans.Reader.ReaderT
                           <*>_N
                           (Sub (Foundation.D:R:YesodPersistBackendApp[0]))
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N)_R))
                    `cast`
                  (Yesod.Core.Types.N:HandlerT[0]
                       <Foundation.App>_N <GHC.Types.IO>_N <a>_N)
                    eta)
                   `cast`
                 (GHC.Types.N:IO[0] <a>_R)
                   ipv }) -}
ffb06ba9f1500799ece98b5f317f2240
  $fYesodPersistApp2 ::
    (Database.Persist.Class.PersistStore.IsPersistBackend
       Database.Persist.Sql.Types.Internal.SqlBackend,
     Database.Persist.Sql.Types.Internal.SqlBackend
     Data.Type.Equality.~ Database.Persist.Sql.Types.Internal.SqlBackend)
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((Database.Persist.Sql.Types.Internal.$fIsPersistBackendSqlBackend,
                  Foundation.$fYesodPersistApp3
                    `cast`
                  (Sym (Data.Type.Equality.N:~[0]
                            <*>_N) <Database.Persist.Sql.Types.Internal.SqlBackend>_N <Database.Persist.Sql.Types.Internal.SqlBackend>_N))) -}
b24ece952ce43e60c546c18247399e1a
  $fYesodPersistApp3 ::
    Database.Persist.Sql.Types.Internal.SqlBackend
    GHC.Types.~~ Database.Persist.Sql.Types.Internal.SqlBackend
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ *
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @ Database.Persist.Sql.Types.Internal.SqlBackend
                   @~ <Database.Persist.Sql.Types.Internal.SqlBackend>_N) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp4 ::
    Yesod.Core.Types.HandlerT
      Foundation.App
      GHC.Types.IO
      (Yesod.Core.Class.Handler.HandlerSite
         (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Unfolding: (Yesod.Core.Handler.getYesod
                   @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                   (Foundation.$fYesodApp_$s$fMonadHandlerHandlerT
                      @ Foundation.App)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$cp1YesodPersist ::
    GHC.Base.Monad (Yesod.Persist.Core.YesodDB Foundation.App)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Foundation.$fYesodPersistApp_$s$fMonadReaderT
                   @ Database.Persist.Sql.Types.Internal.SqlBackend)
                  `cast`
                (GHC.Base.Monad
                   (Control.Monad.Trans.Reader.ReaderT
                      <*>_N
                      (Sym (Foundation.D:R:YesodPersistBackendApp[0]))
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_N)_N)_R -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$crunDB ::
    Yesod.Persist.Core.YesodDB Foundation.App a
    -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
  {- Arity: 3, Strictness: <L,C(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp1
                  `cast`
                (forall (a :: <GHC.Types.*>_N).
                 <Yesod.Persist.Core.YesodDB Foundation.App a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <Foundation.App>_N <GHC.Types.IO>_N <a>_N))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$dApplicative ::
    GHC.Base.Applicative
      (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT
                   @ Foundation.App) -}
0760702c1c7e66fac15d1ad253d662f1
  $fYesodPersistApp_$dMonad :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
88f32882a620157cf3d04d20cef906f5
  $fYesodPersistApp_$s$fApplicativeHandlerT ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fFunctorHandlerT @ site)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c*>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fApplicativeHandlerT_$c<*
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad) -}
2d66ad6fc43cdaf0c687ba1801ef9847
  $fYesodPersistApp_$s$fApplicativeHandlerT_$creturn ::
    a -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Unfolding: InlineRule (1, True, True)
                (\ @ site
                   @ a
                   (eta :: a)
                   (eta1 :: Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO))
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (GHC.Base.returnIO @ a eta) `cast` (GHC.Types.N:IO[0] <a>_R) eta2)
                  `cast`
                (forall (site :: <*>_N) (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.N:IO[0] <a>_R))
                          (Sym (Yesod.Core.Types.N:HandlerT[0]
                                    <site>_N <GHC.Types.IO>_N <a>_N))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fApplicativeReaderT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
                     @ r)
                  (\ @ a (eta :: a) ->
                   let {
                     m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                     = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                         @ GHC.Types.IO
                         @ Foundation.App
                         Foundation.$fYesodPersistApp_$dMonad
                         @ a
                         eta
                   } in
                   (\ (eta1 :: r) ->
                    GHC.Base.const
                      @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                      @ r
                      m1
                      eta1)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                             <*>_N
                             <r>_R
                             <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                             <a>_N)))
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c*>
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative)
                  (Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*
                     @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                     @ r
                     Foundation.$fYesodPersistApp_$dApplicative) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fApplicativeReaderT_$c<*> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) (a -> b))
                   (v :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fApplicativeHandlerT_$c<*>
                      @ GHC.Types.IO
                      @ Foundation.App
                      Foundation.$fYesodPersistApp_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ (a -> b)
                         f
                         r1)
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         v
                         r1))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fFunctorReaderT -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fApplicativeReaderT_$cpure ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,A><L,A><S,U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ r @ a (eta :: a) ->
                 let {
                   m1 :: Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                   = Yesod.Core.Types.$fApplicativeHandlerT_$cpure
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ a
                       eta
                 } in
                 (\ (eta1 :: r) ->
                  GHC.Base.const
                    @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ r
                    m1
                    eta1)
                   `cast`
                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                           <*>_N
                           <r>_R
                           <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                           <a>_N))) -}
64c5ad98514f7161ed9e24308ecf9edc
  $fYesodPersistApp_$s$fFunctorHandlerT ::
    GHC.Base.Functor (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fFunctorHandlerT_$c<$
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fFunctorReaderT ::
    GHC.Base.Functor
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r)
                  (Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fFunctorReaderT_$c<$ ::
    a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*C1(U)><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ r
                   @ a
                   @ b
                   (eta :: a)
                   (eta1 :: Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (eta2 :: r) ->
                 let {
                   f :: b -> a {- Arity: 1 -} = \ (ds :: b) -> eta
                 } in
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <a>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ b
                           eta1
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ b
                       @ a
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <a>_N)
                   eta2)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fFunctorReaderT_$cfmap ::
    (a -> b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,C(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ r
                   @ a
                   @ b
                   (f :: a -> b)
                   (eta :: Control.Monad.Trans.Reader.ReaderT
                             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (eta1 :: r) ->
                 (GHC.Base.$
                    @ 'GHC.Types.PtrRepLifted
                    @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                    @ (Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                    (\ (tpl :: r
                               -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                     tpl)
                      `cast`
                    (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <r>_R
                                   <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                   <b>_N))
                    (let {
                       g :: r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO a
                       = Control.Monad.Trans.Reader.runReaderT
                           @ r
                           @ *
                           @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                           @ a
                           eta
                     } in
                     \ (x :: r) ->
                     Yesod.Core.Types.$fFunctorHandlerT_$cfmap
                       @ GHC.Types.IO
                       @ Foundation.App
                       Foundation.$fYesodPersistApp_$dMonad
                       @ a
                       @ b
                       f
                       (g x)))
                   `cast`
                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                      <*>_N
                      <r>_R
                      <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                      <b>_N)
                   eta1)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N) (b :: <*>_N).
                 <a -> b>_R
                 ->_R <Control.Monad.Trans.Reader.ReaderT
                         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <b>_N)) -}
2445a80212381696d780b5a9bf408e90
  $fYesodPersistApp_$s$fMonadBaseControlbHandlerT ::
    Control.Monad.Trans.Control.MonadBaseControl
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl
                     @ site)
                  (Yesod.Core.Types.$fMonadBaseControlbHandlerT_$cliftBaseWith
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO)
                  (Yesod.Core.Types.$fMonadBaseControlbHandlerT_$crestoreM
                     @ GHC.Types.IO
                     @ GHC.Types.IO
                     @ site
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO) -}
b84c296f6e62606f03ea569b8a23292c
  $fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT -}
3caad77710b80969c36d29d9914a6b81
  $fYesodPersistApp_$s$fMonadBasebHandlerT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase
                     @ site) -}
df4cca4047d81e68710db42186ddb2fa
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase ::
    GHC.Types.IO α -> Yesod.Core.Types.HandlerT site GHC.Types.IO α
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><L,A>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ α (eta :: GHC.Types.IO α) ->
                 let {
                   eta1 :: GHC.Types.IO α = GHC.Base.id @ (GHC.Types.IO α) eta
                 } in
                 (\ (ds :: Yesod.Core.Types.HandlerData
                             site (Yesod.Core.Types.MonadRoute GHC.Types.IO)) ->
                  eta1)
                   `cast`
                 (Sym (Yesod.Core.Types.N:HandlerT[0]
                           <site>_N <GHC.Types.IO>_N <α>_N))) -}
b0e06b4170b47399c51bb4569f96f568
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase ::
    GHC.Base.Applicative GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fApplicativeIO) -}
d3f9dca63db1ab1daee18c59e5f72682
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT -}
1c4ba603dd55f80815c70f3878debc28
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase ::
    GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ site -> GHC.Base.$fMonadIO) -}
9bf14bd1ccfd0680435440ce052e06c0
  $fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fMonadHandlerT -}
d5d61b02894e1b002a6c751ad7bda8b0
  $fYesodPersistApp_$s$fMonadHandlerT ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ site.
                  @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                  (Yesod.Core.Types.$fMonadHandlerT_$cp1Monad
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>=
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Yesod.Core.Types.$fMonadHandlerT_$c>>
                     @ GHC.Types.IO
                     @ site
                     Foundation.$fYesodPersistApp_$dMonad)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT_$creturn
                     @ site)
                  (Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail @ site) -}
5a21f952654fda705052ad478a1c5ffd
  $fYesodPersistApp_$s$fMonadHandlerT_$cfail ::
    GHC.Base.String -> Yesod.Core.Types.HandlerT site GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>x,
     Unfolding: InlineRule (1, True, False)
                (\ @ site @ a (eta :: GHC.Base.String) ->
                 Yesod.Core.Types.$fMonadHandlerT1
                   @ site
                   @ GHC.Types.IO
                   @ a
                   Foundation.$fYesodPersistApp_$dMonad
                   eta) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fMonadReaderT ::
    GHC.Base.Monad
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ r.
                  @ (Control.Monad.Trans.Reader.ReaderT
                       r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r)
                  (Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r)
                  (Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fMonadReaderT_$c>> ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs, Strictness: <L,1*C1(U)><L,1*C1(U)><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: Control.Monad.Trans.Reader.ReaderT
                           r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      Foundation.$fYesodPersistApp_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         k
                         r1))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fMonadReaderT_$c>>= ::
    Control.Monad.Trans.Reader.ReaderT
      r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
    -> (a
        -> Control.Monad.Trans.Reader.ReaderT
             r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*C1(U)><L,C(C1(C1(C1(U))))><L,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ r
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.Reader.ReaderT
                            r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a)
                   (k :: a
                         -> Control.Monad.Trans.Reader.ReaderT
                              r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b)
                   @ (Control.Monad.Trans.Reader.ReaderT
                        r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) b)
                   (\ (tpl :: r
                              -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b) ->
                    tpl)
                     `cast`
                   (<r -> Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO b>_R
                    ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                  <*>_N
                                  <r>_R
                                  <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                                  <b>_N))
                   (\ (r1 :: r) ->
                    Yesod.Core.Types.$fMonadHandlerT_$c>>=
                      @ GHC.Types.IO
                      @ Foundation.App
                      Foundation.$fYesodPersistApp_$dMonad
                      @ a
                      @ b
                      (Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ a
                         m1
                         r1)
                      (\ (a1 :: a) ->
                       Control.Monad.Trans.Reader.runReaderT
                         @ r
                         @ *
                         @ (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO)
                         @ b
                         (k a1)
                         r1))) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fMonadReaderT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO) a
  {- Arity: 2, Strictness: <B,U><B,A>x, Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                (\ @ r @ a (msg :: GHC.Base.String) (eta :: r) ->
                 Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail
                   @ Foundation.App
                   @ a
                   msg)
                  `cast`
                (forall (r :: <*>_N) (a :: <*>_N).
                 <GHC.Base.String>_R
                 ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                               <*>_N
                               <r>_R
                               <Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO>_R
                               <a>_N)) -}
a0d81851c2c3b97293b91e34ceefd312
  $fYesodPersistApp_$s$fMonadReaderT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.Reader.ReaderT
         r (Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodPersistApp_$s$fApplicativeReaderT -}
db8527a20b006dc68bef7abd8439c0f6
  $tc'App :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15326670585664834487L##
                   15842724464465890059L##
                   Foundation.$trModule
                   Foundation.$tc'App1) -}
26c840c2f8e0c091442ca35be288ffbb
  $tc'App1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'App"#) -}
4f41fa39f38071804f19e6b78f0c098a
  $tcApp :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4306106139035983540L##
                   7730147060352926003L##
                   Foundation.$trModule
                   Foundation.$tcApp1) -}
8a7de60e37960bb4dee3349382693134
  $tcApp1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "App"#) -}
eb7df92ca02ad6c4d67e5efce396185b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Foundation.$trModule2
                   Foundation.$trModule1) -}
ec922659b1911656b874392de5d3dd06
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Foundation"#) -}
6aed43d768e0310b88ce89e0a6e1c809
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "frontexemplo-0.0.0-H0c8pw4HC1z92NDocJz3M4"#) -}
3a262bbe2855519d6c42dc82c2852a80
  $w$ccleanPath ::
    [Data.Text.Internal.Text]
    -> Data.Either.Either
         [Data.Text.Internal.Text] [Data.Text.Internal.Text]
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: [Data.Text.Internal.Text]) ->
                 let {
                   corrected :: [Data.Text.Internal.Text]
                   = GHC.List.filter
                       @ Data.Text.Internal.Text
                       Foundation.$fYesodApp26
                       w
                 } in
                 case GHC.Classes.$fEq[]_$c==
                        @ Data.Text.Internal.Text
                        Data.Text.$fEqText
                        corrected
                        w of wild {
                   GHC.Types.False
                   -> Data.Either.Left
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        corrected
                   GHC.Types.True
                   -> Data.Either.Right
                        @ [Data.Text.Internal.Text]
                        @ [Data.Text.Internal.Text]
                        (GHC.Base.map
                           @ Data.Text.Internal.Text
                           @ Data.Text.Internal.Text
                           Foundation.$fYesodApp24
                           w) }) -}
6fd1e2a5fd3b8a652660be91f4595d6d
  $w$cfileUpload ::
    Network.Wai.Internal.RequestBodyLength
    -> Yesod.Core.Types.FileUpload
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ (w :: Network.Wai.Internal.RequestBodyLength) ->
                 case w of wild {
                   Network.Wai.Internal.ChunkedBody -> Foundation.$fYesodApp14
                   Network.Wai.Internal.KnownLength size
                   -> case size of wild1 { GHC.Word.W64# x ->
                      case {__pkg_ccall ghc-prim-0.5.0.0 hs_leWord64 GHC.Prim.Word64#
                                                                     -> GHC.Prim.Word64#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Prim.Int# #)}
                             x
                             50000L##
                             GHC.Prim.realWorld# of wild2 { (#,#) ds2 ds3 ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool ds3 of wild3 {
                        GHC.Types.False -> Foundation.$fYesodApp14
                        GHC.Types.True -> Foundation.$fYesodApp12 } } } }) -}
688981756d3e401934d18ab64c4b109e
  $w$cjoinPath ::
    Data.Text.Internal.Text
    -> [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> Data.ByteString.Builder.Internal.Builder
  {- Arity: 3, Strictness: <L,1*U(U,U,U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: Data.Text.Internal.Text)
                   (w1 :: [Data.Text.Internal.Text])
                   (w2 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]) ->
                 let {
                   ds :: [GHC.Types.Char]
                   = case w of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                     let {
                       end :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                     } in
                     letrec {
                       $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                         {- Arity: 1, Strictness: <S,U>, Inline: [0] -}
                       = \ (ww :: GHC.Prim.Int#) ->
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.>=# ww end) of wild1 {
                           GHC.Types.False
                           -> case GHC.Prim.indexWord16Array# dt ww of r# { DEFAULT ->
                              case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.geWord# r# 55296##) of wild2 {
                                GHC.Types.False
                                -> GHC.Types.:
                                     @ GHC.Types.Char
                                     (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                     ($wunfold (GHC.Prim.+# ww 1#))
                                GHC.Types.True
                                -> case GHC.Prim.tagToEnum#
                                          @ GHC.Types.Bool
                                          (GHC.Prim.leWord# r# 56319##) of wild3 {
                                     GHC.Types.False
                                     -> GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                          ($wunfold (GHC.Prim.+# ww 1#))
                                     GHC.Types.True
                                     -> case GHC.Prim.indexWord16Array#
                                               dt
                                               (GHC.Prim.+# ww 1#) of r#1 { DEFAULT ->
                                        GHC.Types.:
                                          @ GHC.Types.Char
                                          (GHC.Types.C#
                                             (GHC.Prim.chr#
                                                (GHC.Prim.+#
                                                   (GHC.Prim.+#
                                                      (GHC.Prim.uncheckedIShiftL#
                                                         (GHC.Prim.-#
                                                            (GHC.Prim.word2Int# r#)
                                                            55296#)
                                                         10#)
                                                      (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                                   65536#)))
                                          ($wunfold (GHC.Prim.+# ww 2#)) } } } }
                           GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                     } in
                     $wunfold dt1 }
                 } in
                 let {
                   ds1 :: Data.ByteString.Builder.Internal.Builder
                   = Network.HTTP.Types.URI.encodePath
                       (case w1 of wild {
                          [] -> Foundation.$fYesodApp23
                          : ds2 ds3
                          -> GHC.Base.map
                               @ Data.Text.Internal.Text
                               @ Data.Text.Internal.Text
                               Foundation.$fYesodApp22
                               wild })
                       (GHC.Base.map
                          @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                          @ (Data.ByteString.Internal.ByteString,
                             GHC.Base.Maybe Data.ByteString.Internal.ByteString)
                          Foundation.$fYesodApp21
                          w2)
                 } in
                 (\ @ r (eta :: Data.ByteString.Builder.Internal.BuildStep r) ->
                  let {
                    w3 :: Data.ByteString.Builder.Internal.BufferRange
                          -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r)
                    = ds1 `cast` (Data.ByteString.Builder.Internal.N:Builder[0])
                        @ r
                        eta
                  } in
                  \ (w4 :: Data.ByteString.Builder.Internal.BufferRange)
                    (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  case w4 of ww { Data.ByteString.Builder.Internal.BufferRange ww1 ww2 ->
                  Foundation.$wstep @ r ds w3 ww1 ww2 w5 })
                   `cast`
                 (Trans
                      (forall (r :: <*>_N).
                       <Data.ByteString.Builder.Internal.BuildStep r>_R
                       ->_R <Data.ByteString.Builder.Internal.BufferRange>_R
                       ->_R Sym (GHC.Types.N:IO[0]
                                     <Data.ByteString.Builder.Internal.BuildSignal r>_R))
                      (Sym (Data.ByteString.Builder.Internal.N:Builder[0])))) -}
f7161a1d45b173f8f4abbaadf91a236c
  $w$cmakeSessionBackend ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Yesod.Core.Types.SessionBackend #)
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Web.ClientSession.getDefaultKey2
                        Web.ClientSession.defaultKeyFile
                        w of ds1 { (#,#) ipv ipv1 ->
                 case Yesod.Core.Internal.Session.clientSessionDateCacher1
                        Foundation.$fYesodApp16
                          `cast`
                        (Trans
                             (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P))
                             (Sym (Data.Time.Clock.UTC.N:NominalDiffTime[0])))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv3 of wild { (,) getCachedDate _closeDateCacher ->
                 (# ipv2,
                    GHC.Base.Just
                      @ Yesod.Core.Types.SessionBackend
                      (Yesod.Core.Class.Yesod.defaultClientSessionBackend3
                         ipv1
                         getCachedDate
                         Yesod.Core.Class.Yesod.defaultClientSessionBackend2)
                        `cast`
                      (Trans
                           (<Network.Wai.Internal.Request>_R
                            ->_R Sym (GHC.Types.N:IO[0]
                                          <(Data.Map.Base.Map
                                              Data.Text.Internal.Text
                                              Data.ByteString.Internal.ByteString,
                                            Yesod.Core.Types.SessionMap
                                            -> GHC.Types.IO [Yesod.Core.Types.Header])>_R))
                           (Sym (Yesod.Core.Types.N:SessionBackend[0]))) #) } } }) -}
e8577982f1e11fda7f33fa2b23a35476
  $w$cmessageLoggerSource ::
    Yesod.Core.Types.Logger
    -> Language.Haskell.TH.Syntax.Loc
    -> Control.Monad.Logger.LogSource
    -> Control.Monad.Logger.LogLevel
    -> System.Log.FastLogger.LogStr.LogStr
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6,
     Strictness: <L,U(U(A,1*U(U),1*U(U(U),U(U),A,U),1*C1(U(U,U))),U)><L,1*U(U,U,U,U(1*U(U),1*U(U)),A)><L,1*U(U,U,U)><S,U><L,1*U(U,C(U))><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Yesod.Core.Types.Logger)
                   (w1 :: Language.Haskell.TH.Syntax.Loc)
                   (w2 :: Control.Monad.Logger.LogSource)
                   (w3 :: Control.Monad.Logger.LogLevel)
                   (w4 :: System.Log.FastLogger.LogStr.LogStr)
                   (w5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 let {
                   $j :: GHC.Prim.Void#
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ (w6 :: GHC.Prim.Void#)[OneShot] ->
                     case Yesod.Core.Class.Yesod.defaultMessageLoggerSource2
                            (Yesod.Core.Types.loggerDate w)
                            w1
                            w2
                            w3
                            w4
                            w5 of ds2 { (#,#) ipv2 ipv3 ->
                     Yesod.Core.Types.loggerPutStr1 w ipv3 ipv2 }
                 } in
                 case w3 of wild {
                   Control.Monad.Logger.LevelDebug -> (# w5, GHC.Tuple.() #)
                   Control.Monad.Logger.LevelInfo -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelWarn -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelError -> $j GHC.Prim.void#
                   Control.Monad.Logger.LevelOther a1 -> $j GHC.Prim.void# }) -}
a0d81851c2c3b97293b91e34ceefd312
  $w$cparseRoute ::
    [Data.Text.Internal.Text]
    -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
    -> GHC.Base.Maybe (Yesod.Routes.Class.Route Foundation.App)
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0] -}
a0d81851c2c3b97293b91e34ceefd312
  $w$cyesodMiddleware ::
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO res
    -> Yesod.Core.Types.YesodRequest
    -> Yesod.Core.Types.RunHandlerEnv Foundation.App
    -> GHC.Prim.MutVar# GHC.Prim.RealWorld Yesod.Core.Types.GHState
    -> (Yesod.Routes.Class.Route Foundation.App
        -> Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.MutVar#
         GHC.Prim.RealWorld Control.Monad.Trans.Resource.Internal.ReleaseMap
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, res #)
  {- Arity: 7,
     Strictness: <L,1*C1(C1(U(U,U)))><S,U><S,U><S,U><S,U><L,U><S,U>,
     Inline: [0] -}
2121b26f5f506a3c56545fc49c6af889
  $w$sgo5 ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Set.Base.Set Data.Text.Internal.Text
    -> Data.Set.Base.Set Data.Text.Internal.Text
  {- Arity: 4, Strictness: <L,U><L,U><L,U><S,1*U>, Inline: [0] -}
ded3eb0b8edc64c7361a7504081e5885
  $woptional ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Usuario
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
f89bb25fb3a289663430a7c06be9e3e0
  $woptional1 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Cinema
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
1925f79eb95a9f487d24ac52ad813be3
  $woptional2 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Sessao
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
2bcdc3debf0e78fe1900b8169ab4d50a
  $woptional3 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Cinema
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
58ed7456dd39337f324068203d4440d0
  $woptional4 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Cinema
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
7b155280920fd9cd22c806b1d40b0be5
  $woptional5 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Filme
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
df55d949c3ca2776f80981a8fe51bccf
  $woptional6 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Pokemon
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
8c58b5cbdcb2ac8f760a9e7bf95aff13
  $woptional7 ::
    GHC.Prim.Int#
    -> forall b.
       (Database.Persist.Class.PersistEntity.Key Model.Treinador
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
f2328b6a318078514dfbed851adb451a
  $woptional8 ::
    GHC.Prim.Int#
    -> forall b.
       (Yesod.Routes.Class.Route Yesod.Static.Static
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
9eac7e5d70ddb47a1d97375cf7c67d27
  $wstep ::
    [GHC.Types.Char]
    -> (Data.ByteString.Builder.Internal.BufferRange
        -> GHC.Types.IO (Data.ByteString.Builder.Internal.BuildSignal r))
    -> GHC.Prim.Addr#
    -> GHC.Prim.Addr#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.ByteString.Builder.Internal.BuildSignal r #)
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S,1*U><L,C(C1(U(U,U)))><S,U><L,U><S,U>, Inline: [0] -}
a0d81851c2c3b97293b91e34ceefd312
  data App
    = App {appSettings :: Settings.AppSettings,
           appStatic :: Yesod.Static.Static,
           appConnPool :: Database.Persist.Sql.Types.ConnectionPool,
           appHttpManager :: Network.HTTP.Client.Types.Manager,
           appLogger :: Yesod.Core.Types.Logger}
a0d81851c2c3b97293b91e34ceefd312
  axiom D:R:RouteApp0::
      Yesod.Routes.Class.Route Foundation.App = Foundation.R:RouteApp
a0d81851c2c3b97293b91e34ceefd312
  axiom D:R:YesodPersistBackendApp::
      Yesod.Persist.Core.YesodPersistBackend Foundation.App
        = Database.Persist.Sql.Types.Internal.SqlBackend
064b47048c83667d0293c9860545be25
  type Form a =
    Text.Blaze.Html.Html
    -> Yesod.Form.Types.MForm
         Foundation.Handler
         (Yesod.Form.Types.FormResult a, Foundation.Widget)
479ce961ea7dca1b3e1a7f6de24da3ed
  type Handler =
    Yesod.Core.Types.HandlerT Foundation.App GHC.Types.IO
    :: GHC.Types.* -> *
a0d81851c2c3b97293b91e34ceefd312
  data instance Yesod.Routes.Class.Route Foundation.App
    = StaticR (Yesod.Routes.Class.Route Yesod.Static.Static)
    | FaviconR
    | RobotsR
    | HomeR
    | TreinadorR
    | PerfilR Model.TreinadorId
    | ListaTreinadorR
    | PokemonR
    | PokedexR Model.PokemonId
    | FilmeR
    | FilmesR Model.FilmeId
    | ListaFilmeR
    | SessaoR Model.CinemaId
    | PaginaSessaoR Model.CinemaId Model.SessaoId
    | CinemaR
    | CinemasR Model.CinemaId
    | ListaCinemaR
    | CadUsuarioR
    | PerfilUsuarioR Model.UsuarioId
    | LoginR
    | LogoutR
    | AdminR
    RecFlag: Recursive
727c7264d0bb631085ef8399f9ba0f4e
  type Widget =
    Yesod.Core.Types.WidgetT Foundation.App GHC.Types.IO ()
c4e9fdb3a79d4262d28d46f0be0ab2f6
  appConnPool ::
    Foundation.App -> Database.Persist.Sql.Types.ConnectionPool
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLL),1*U(A,A,1*U(U,U,U,U,U,U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds3 }) -}
a0d81851c2c3b97293b91e34ceefd312
  appHttpManager ::
    Foundation.App -> Network.HTTP.Client.Types.Manager
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSL),1*U(A,A,A,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds4 }) -}
a8782201551f6b51affc08554198e933
  appLogger :: Foundation.App -> Yesod.Core.Types.Logger
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLS),1*U(A,A,A,A,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds5 }) -}
9309753b9e22314054a95df55d97c67f
  appSettings :: Foundation.App -> Settings.AppSettings
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLL),1*U(1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U),A,A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds1 }) -}
9a9915c436b459d64778cc680eaaa0f5
  appStatic :: Foundation.App -> Yesod.Static.Static
  RecSel Left Foundation.App
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLL),1*U(A,1*U(U,U,U,U,U,U,U,U,U,U),A,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Foundation.App) ->
                 case ds of wild { Foundation.App ds1 ds2 ds3 ds4 ds5 -> ds2 }) -}
60e93189ade89fd5c63c4d06eaba33d4
  ehAdmin :: Foundation.Handler Yesod.Core.Types.AuthResult
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp39
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Yesod.Core.Types.AuthResult>_N))) -}
c0d95e60711573c3598844644696147a
  ehUsuario :: Foundation.Handler Yesod.Core.Types.AuthResult
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Foundation.$fYesodApp46
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.App (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.N:IO[0] <Yesod.Core.Types.AuthResult>_R))
                     (Sym (Yesod.Core.Types.N:HandlerT[0]
                               <Foundation.App>_N
                               <GHC.Types.IO>_N
                               <Yesod.Core.Types.AuthResult>_N))) -}
4df8dbd3f4e4ceb95afabb459e7155a0
  resourcesApp ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp147
                   Foundation.resourcesApp1) -}
0f63aae76eea96fcfdeca8bd6e06a65c
  resourcesApp1 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp142
                   Foundation.resourcesApp2) -}
764b8b6a2268086b3ce11a433604aa95
  resourcesApp10 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp99
                   Foundation.resourcesApp11) -}
3283fd1c44d5b1a7d8154ea8f060f61f
  resourcesApp100 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute13
                   Foundation.resourcesApp101
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
d4400e04912e7264b1fe0bbae0813443
  resourcesApp101 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp97
                   Foundation.resourcesApp102) -}
87e664bcd30e5897a83ef2583ac8e312
  resourcesApp102 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp103
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
303e0de4c300047ccd12844ba73bf80a
  resourcesApp103 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp104) -}
eefeac188c345ca11a0ca34b119933be
  resourcesApp104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FilmeId"#) -}
591a6dd3f2d0ace8f824b8207f20013c
  resourcesApp105 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp106) -}
d6e741398da0d73781cc580e54f4ddcb
  resourcesApp106 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute57
                   Foundation.resourcesApp96
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
f56467fae28a783f1ab0fa06e9a878b0
  resourcesApp107 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp108) -}
2f1660b97c503b0b16dd7f661715e580
  resourcesApp108 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute15
                   Foundation.resourcesApp109
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
73970ee9988738e01d3e28c4f61c33a8
  resourcesApp109 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp113
                   Foundation.resourcesApp110) -}
792548f84c752f98fc58f6d049e25824
  resourcesApp11 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp93
                   Foundation.resourcesApp12) -}
9cca32c6540d524dd2f8f0245eab84db
  resourcesApp110 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp111
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
95f6f8a64df5df5763933fcd8a09fd94
  resourcesApp111 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp112) -}
b36e30010fd07734b8d9056bee08b9a3
  resourcesApp112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PokemonId"#) -}
5664a3af060c2ce8df173f72d40fd1da
  resourcesApp113 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp114) -}
6babaa77aaa5da7252c664a9b82b4665
  resourcesApp114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pokedex"#) -}
65eb8440c0fe8ec34d2da2a0f1d1eac6
  resourcesApp115 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp116) -}
dd9fd27ea2ddb10b524ef7ba1421e784
  resourcesApp116 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute60
                   Foundation.resourcesApp117
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
16f7d6d8132f40418c4d5c48ee70bb68
  resourcesApp117 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp118
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
def6d0e173627d06bdab5fd74be4b6bf
  resourcesApp118 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp119) -}
d59f9ead6414e62e87d9578123b725b6
  resourcesApp119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pokemon"#) -}
b36b75a7dd2136770566a40cedc6a19c
  resourcesApp12 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp88
                   Foundation.resourcesApp13) -}
4d7950e0aa4871d50ca7482cf480187c
  resourcesApp120 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp121) -}
30f15c554f3ace70fb30419f6119df68
  resourcesApp121 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute63
                   Foundation.resourcesApp122
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
6bb201aaecce80485d00afb71392f890
  resourcesApp122 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp68
                   Foundation.resourcesApp123) -}
97a64c736ffb64a6547f4695b4725868
  resourcesApp123 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp124
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
9c43c189cb406abb1b9aead2af265f39
  resourcesApp124 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp125) -}
171c7698531e18fc1f6a2536d02cd6ef
  resourcesApp125 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "treinador"#) -}
498b3db293abbbdd80047f0ce4732076
  resourcesApp126 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp127) -}
ab929733861701d78461da23fea19a03
  resourcesApp127 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute17
                   Foundation.resourcesApp128
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
3a4bcb050a7781339393198ca44eba80
  resourcesApp128 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp50
                   Foundation.resourcesApp129) -}
bffcf2c4bb24ef21710c01a16bba356c
  resourcesApp129 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp124
                   Foundation.resourcesApp130) -}
bac979844392cb30c15bdaa6acddec51
  resourcesApp13 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp78
                   Foundation.resourcesApp14) -}
6fb59f220765cfe00fdaee49f202db46
  resourcesApp130 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp131
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
a85dcdc8183d113129389ff60ad395a5
  resourcesApp131 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp132) -}
8f62d7ecf3a6bff5a24ee325bdf7565d
  resourcesApp132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TreinadorId"#) -}
b0a87384be8ec7f8f66be647f0e045a9
  resourcesApp133 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp134) -}
37d9dcc30ba329f38d5ec734796aa1b6
  resourcesApp134 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute66
                   Foundation.resourcesApp123
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
8ef45873b9f9aa227c31f94368257583
  resourcesApp135 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp136) -}
cc1c2aaf25aac38eec8eb4a1d774d27c
  resourcesApp136 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute69
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
478ac261a9954d4f43557ac7a2529034
  resourcesApp137 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp138) -}
3601713fbe7019edcbc635d374d2e33f
  resourcesApp138 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute72
                   Foundation.resourcesApp139
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
9ad32c56e913fe0d9810bdace151abe9
  resourcesApp139 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp140
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
4264a661ad4a175da86392b89926ef9e
  resourcesApp14 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp76
                   Foundation.resourcesApp15) -}
2aa69aefcf5c338f78804a7519170786
  resourcesApp140 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp141) -}
91da4c6bc5b9b2cd106abf47b94f01be
  resourcesApp141 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "robots.txt"#) -}
f12442e24c982167a7b7ab447c366555
  resourcesApp142 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp143) -}
6f426b7ebf088f988fca51f6c303162a
  resourcesApp143 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute75
                   Foundation.resourcesApp144
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
735d1feccefbc9c5994e1a5109914485
  resourcesApp144 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp145
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
e7cf1a5ec76b7b637d3983faab2c6f6e
  resourcesApp145 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp146) -}
c8ce2685ded6a6d2f8a0fd8c6cd578ea
  resourcesApp146 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "favicon.ico"#) -}
8006f00c28e890b4173c0dfe38038a15
  resourcesApp147 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp148) -}
3d85c60127b9df40e1431101a21abb6a
  resourcesApp148 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute19
                   Foundation.resourcesApp152
                   Foundation.resourcesApp149
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
889b7566e588fd89a09af9d015c1356e
  resourcesApp149 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Subsite
                   @ GHC.Base.String
                   Foundation.resourcesApp151
                   Foundation.resourcesApp150) -}
058134c4fef8452432a0d649f3793ca5
  resourcesApp15 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp70
                   Foundation.resourcesApp16) -}
0d190faefcefd86461dab632e4b2833c
  resourcesApp150 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "appStatic"#) -}
bed1d29ff1971d02910ba6dc258963cd
  resourcesApp151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Static"#) -}
8d2c5667715ec30cb6ff8c8a311272cd
  resourcesApp152 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp153
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
3b0be6d9b3502fe1faaf08aae52c6c60
  resourcesApp153 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp154) -}
d9dcbb3d6ccd885506c00f7462f907a9
  resourcesApp154 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "static"#) -}
cea23749a17252b4f9e805accf6674de
  resourcesApp16 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp62
                   Foundation.resourcesApp17) -}
56b04cf26babafefc5084fdb0800194a
  resourcesApp17 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp56
                   Foundation.resourcesApp18) -}
3e3cfcfb2a15c53d65765aab60eef7de
  resourcesApp18 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp45
                   Foundation.resourcesApp19) -}
ba3318fe515d914a8c5de7287f67e566
  resourcesApp19 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp38
                   Foundation.resourcesApp20) -}
0b177db946ad1c11aac6238766bb0e46
  resourcesApp2 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp137
                   Foundation.resourcesApp3) -}
5cfe15b650dd40cadd69eecc50537833
  resourcesApp20 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp30
                   Foundation.resourcesApp21) -}
62f6c938120143ce86feadcfd234d76e
  resourcesApp21 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp22
                   (GHC.Types.[]
                      @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String))) -}
eecaa70d9f7ea3224ad6dc42b1a608cb
  resourcesApp22 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp23) -}
c2be37af6421e08687c5ab44c6cd14cb
  resourcesApp23 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute36
                   Foundation.resourcesApp27
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
e1c61b2159477fd5567bc68116bc8e18
  resourcesApp24 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp25) -}
0012a6999a2569f5e4be3fb178dd83cd
  resourcesApp25 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp26
                   (GHC.Types.[] @ GHC.Base.String)) -}
d25f4139b0988784591675ab0b73fab8
  resourcesApp26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GET"#) -}
bba89218b4a83ab3f17903cb6873cc22
  resourcesApp27 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp28
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
feaf26bb90dd068c5185f562b79b4b66
  resourcesApp28 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp29) -}
b3ea92fe795e76222c9a0a8f4642d573
  resourcesApp29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "admin"#) -}
1fc7162b7601c9455db6c7c1dfabd7dd
  resourcesApp3 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp135
                   Foundation.resourcesApp4) -}
cf46b196e9daf60955ac65cc2701b72b
  resourcesApp30 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp31) -}
f1e28ed34d4877b54937df192c3d0043
  resourcesApp31 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute39
                   Foundation.resourcesApp35
                   Foundation.resourcesApp32
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
21e2cc2bf25102c5f2b45a728064d23c
  resourcesApp32 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp33) -}
08c0d4b879d544c4bbc27d1d562a6613
  resourcesApp33 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp34
                   (GHC.Types.[] @ GHC.Base.String)) -}
313d3820d0a10921e0c8b906948e6e49
  resourcesApp34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST"#) -}
46c7c232643c96b7d204810335aee9a6
  resourcesApp35 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp36
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
9315ff0338a2106fbdc16916b53ce347
  resourcesApp36 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp37) -}
41edfdffb8ca029cf05f6f9169b9c3c3
  resourcesApp37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logout"#) -}
91ec2b3f6d6ebb33fefdf66988d811be
  resourcesApp38 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp39) -}
70d6e0277497442683fa716fa4bfde87
  resourcesApp39 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute42
                   Foundation.resourcesApp42
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
4202eccb9e57d7091da37a9000bc737d
  resourcesApp4 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp133
                   Foundation.resourcesApp5) -}
f53ba3b66a1f947157c0ab5b2d12fade
  resourcesApp40 :: Yesod.Routes.TH.Types.Dispatch GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Methods
                   @ GHC.Base.String
                   (GHC.Base.Nothing @ GHC.Base.String)
                   Foundation.resourcesApp41) -}
aa1322646cbe7cf1d9ac73a4a3162f25
  resourcesApp41 :: [GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Foundation.resourcesApp26
                   Foundation.resourcesApp33) -}
7f69d3979eb253f0d80f9fbe25d98515
  resourcesApp42 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp43
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
4ee8bb46efe248dbdd2384bd769ab54c
  resourcesApp43 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp44) -}
7c835ed4bd792601be6af7af9ea8d757
  resourcesApp44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "login"#) -}
1ca063fb0f302a188beb43a868144062
  resourcesApp45 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp46) -}
64d55c28bf285e4b63b32716f80c0b9e
  resourcesApp46 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute5
                   Foundation.resourcesApp47
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
8c5d25785e884644cfebb7a98d95ad0c
  resourcesApp47 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp54
                   Foundation.resourcesApp48) -}
9012af73b39abf3be7e9eca6f30b6c50
  resourcesApp48 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp52
                   Foundation.resourcesApp49) -}
87c01fe9122b619262a75c0bd5204334
  resourcesApp49 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp50
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
f1cafe308ad1197ee19987694c29c7cb
  resourcesApp5 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp126
                   Foundation.resourcesApp6) -}
f9ccb30ad249ec643ed8e714809a9a66
  resourcesApp50 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp51) -}
45c73304afb6ab0295aed337dab0bcca
  resourcesApp51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "perfil"#) -}
e64d314f1b8c26796761d1088c6321ff
  resourcesApp52 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp53) -}
0d3bfe05f424841a443dc076021c3f28
  resourcesApp53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "UsuarioId"#) -}
14c69eef3fe26815544d23f6ed3a0de7
  resourcesApp54 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp55) -}
85273f180b6289b6195443f595bb12d9
  resourcesApp55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "usuario"#) -}
e7d31fbe700975058bd0dcb133d5c20f
  resourcesApp56 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp57) -}
96f907c9ea47a3f43d4f173f86458117
  resourcesApp57 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute45
                   Foundation.resourcesApp58
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
b9ea68dd0ee08219e1aa1a905c5a9cac
  resourcesApp58 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp54
                   Foundation.resourcesApp59) -}
d935d1f5158e10a6dda5a79b4031b8e0
  resourcesApp59 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp60
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
2e0905170afefbbf4a782ca9200ca8bc
  resourcesApp6 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp120
                   Foundation.resourcesApp7) -}
b5cba3782fe7a0cc43191ccc218e2a69
  resourcesApp60 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp61) -}
1a94cf9246958edb5bea888c7580fb61
  resourcesApp61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cadastrar"#) -}
41e02f044624c1304de6c2405a6afc96
  resourcesApp62 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp63) -}
0bfdc113078790f26a86a517adb361fd
  resourcesApp63 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute48
                   Foundation.resourcesApp64
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
549cd641080b5113bbfa3067c8a138d6
  resourcesApp64 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp68
                   Foundation.resourcesApp65) -}
cb59c48d0ea10cd7897921f2bf733d08
  resourcesApp65 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp66
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
3029ccb024e63dc3113590d2278f1b67
  resourcesApp66 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp67) -}
ca2084024b541b7682503b403f6e8e07
  resourcesApp67 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cinema"#) -}
8505078f4a5c58573594772e902568f0
  resourcesApp68 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp69) -}
7d7313abc4ea4695a82d2b82e081e3f4
  resourcesApp69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "lista"#) -}
a23873a4d0c004964ef6333fffb0d911
  resourcesApp7 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp115
                   Foundation.resourcesApp8) -}
429ca246911e08eee4e936d1631ef7dd
  resourcesApp70 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp71) -}
67da5852a4855efec462e54084628327
  resourcesApp71 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute7
                   Foundation.resourcesApp72
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
6d99b301d5f3213350e177b8613990f0
  resourcesApp72 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp66
                   Foundation.resourcesApp73) -}
e64f61f5d3358100854af1d801e9dcef
  resourcesApp73 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp74
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
bd33a159418c1e38b16c9862a4322418
  resourcesApp74 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp75) -}
7f357cbd35d95c0e07f81486f6b5ed69
  resourcesApp75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CinemaId"#) -}
02940bee5f48ebd0f7ecc1afb36ee7d1
  resourcesApp76 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp77) -}
c6b0b729d882db81dfe2aa37eb416f98
  resourcesApp77 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute51
                   Foundation.resourcesApp65
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
2828d9720ba951628f9dc0a8790e36fc
  resourcesApp78 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp79) -}
f88208f1aff1daf87f65d97794c219ce
  resourcesApp79 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute9
                   Foundation.resourcesApp80
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
75e73a6dec29a8faebeaffd02812cb74
  resourcesApp8 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp107
                   Foundation.resourcesApp9) -}
82996b8ae9160b39ada7c6729619ede7
  resourcesApp80 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp66
                   Foundation.resourcesApp81) -}
05807b95586bb19d51190352bcd454df
  resourcesApp81 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp74
                   Foundation.resourcesApp82) -}
1090aba25b15dcee8105de4c0a4848ea
  resourcesApp82 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp86
                   Foundation.resourcesApp83) -}
b9931283edb5e083d73b69412b7128ce
  resourcesApp83 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp84
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
ff1d97978d7a010881de8e2daa673c79
  resourcesApp84 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Yesod.Routes.TH.Types.Dynamic
                   @ GHC.Base.String
                   Foundation.resourcesApp85) -}
ab20dbb5a0045687074391869a143a32
  resourcesApp85 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SessaoId"#) -}
9b45645b96f516d424853f26f304ef02
  resourcesApp86 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp87) -}
01a1164b9a774e9d6778a414df699376
  resourcesApp87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sessao"#) -}
9352b2c9bacc9842f0b59bdcfe6bb72e
  resourcesApp88 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp89) -}
77447d9ef89e77702ec3860a6b09a97e
  resourcesApp89 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute11
                   Foundation.resourcesApp90
                   Foundation.resourcesApp40
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
877138ac0021dc70263afb49560734eb
  resourcesApp9 ::
    [Yesod.Routes.TH.Types.ResourceTree GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.ResourceTree GHC.Base.String)
                   Foundation.resourcesApp105
                   Foundation.resourcesApp10) -}
edb56ac1093d1ee907392cab3ca0c151
  resourcesApp90 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp66
                   Foundation.resourcesApp91) -}
f012cad71c350d404dae40d9da9d6f97
  resourcesApp91 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp74
                   Foundation.resourcesApp92) -}
3a1dcb3751542e6cd3c243948cf7062f
  resourcesApp92 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp86
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
192cf1b74d978cc66c2e55eb224b61aa
  resourcesApp93 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp94) -}
6fe0d65a04d73cbb448a1eec4d7729e7
  resourcesApp94 :: Yesod.Routes.TH.Types.Resource GHC.Base.String
  {- Strictness: m,
     Unfolding: (Yesod.Routes.TH.Types.Resource
                   @ GHC.Base.String
                   Foundation.$fReadRoute54
                   Foundation.resourcesApp95
                   Foundation.resourcesApp24
                   (GHC.Types.[] @ GHC.Base.String)
                   GHC.Types.True) -}
8bc9df4b90668554be6fd54f02a06e99
  resourcesApp95 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp68
                   Foundation.resourcesApp96) -}
85b4aab1bcfe3a749a5bb18f70390da1
  resourcesApp96 :: [Yesod.Routes.TH.Types.Piece GHC.Base.String]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Yesod.Routes.TH.Types.Piece GHC.Base.String)
                   Foundation.resourcesApp97
                   (GHC.Types.[] @ (Yesod.Routes.TH.Types.Piece GHC.Base.String))) -}
4c43c478536878e8fae7fa5efe8794ca
  resourcesApp97 :: Yesod.Routes.TH.Types.Piece GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.Static
                   @ GHC.Base.String
                   Foundation.resourcesApp98) -}
08b48913776e3d77d25122eaf4a2d526
  resourcesApp98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "filme"#) -}
8bcd1850a209c5677019f2b411695c75
  resourcesApp99 ::
    Yesod.Routes.TH.Types.ResourceTree GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Yesod.Routes.TH.Types.ResourceLeaf
                   @ GHC.Base.String
                   Foundation.resourcesApp100) -}
instance GHC.Classes.Eq [Yesod.Routes.Class.Route]
  = Foundation.$fEqRoute
instance Network.HTTP.Client.Types.HasHttpManager [Foundation.App]
  = Foundation.$fHasHttpManagerApp
instance Yesod.Routes.Class.ParseRoute [Foundation.App]
  = Foundation.$fParseRouteApp
instance GHC.Read.Read [Yesod.Routes.Class.Route]
  = Foundation.$fReadRoute
instance Text.Shakespeare.I18N.RenderMessage [Foundation.App,
                                              Yesod.Form.Types.FormMessage]
  = Foundation.$fRenderMessageAppFormMessage
instance Yesod.Routes.Class.RenderRoute [Foundation.App]
  = Foundation.$fRenderRouteApp
instance Yesod.Routes.Class.RouteAttrs [Foundation.App]
  = Foundation.$fRouteAttrsApp
instance GHC.Show.Show [Yesod.Routes.Class.Route]
  = Foundation.$fShowRoute
instance Yesod.Core.Class.Yesod.Yesod [Foundation.App]
  = Foundation.$fYesodApp
instance Yesod.Persist.Core.YesodPersist [Foundation.App]
  = Foundation.$fYesodPersistApp
family instance Yesod.Routes.Class.Route [Foundation.App]
  = Foundation.D:R:RouteApp0
family instance Yesod.Persist.Core.YesodPersistBackend [Foundation.App]
  = Foundation.D:R:YesodPersistBackendApp
"SPEC/Foundation $dmapproot @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                 Foundation.App)
  Yesod.Core.Class.Yesod.$dmapproot @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmapproot
"SPEC/Foundation $dmjsAttributes @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                      Foundation.App)
  Yesod.Core.Class.Yesod.$dmjsAttributes @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmjsAttributes
"SPEC/Foundation $dmjsLoader @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                  Foundation.App)
  Yesod.Core.Class.Yesod.$dmjsLoader @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmjsLoader
"SPEC/Foundation $dmshouldLog @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                   Foundation.App)
  Yesod.Core.Class.Yesod.$dmshouldLog @ Foundation.App $dYesod
  = Foundation.$fYesodApp_$s$dmshouldLog
"SPEC/Foundation $dmurlRenderOverride @ App" [ALWAYS] forall ($dYesod :: Yesod.Core.Class.Yesod.Yesod
                                                                           Foundation.App)
  Yesod.Core.Class.Yesod.$dmurlRenderOverride @ Foundation.App
                                              $dYesod
  = Foundation.$fYesodApp_$s$dmurlRenderOverride
"SPEC/Foundation $fApplicativeHandlerT @ IO _" [ALWAYS] forall @ site
                                                               ($dMonad :: GHC.Base.Monad
                                                                             GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT @ GHC.Types.IO
                                         @ site
                                         $dMonad
  = Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT @ site
"SPEC/Foundation $fApplicativeHandlerT_$creturn @ IO _" [ALWAYS] forall @ site
                                                                        ($dMonad :: GHC.Base.Monad
                                                                                      GHC.Types.IO)
  Yesod.Core.Types.$fApplicativeHandlerT_$creturn @ GHC.Types.IO
                                                  @ site
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fApplicativeHandlerT_$creturn
      @ site
"SPEC/Foundation $fApplicativeReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dApplicative :: GHC.Base.Applicative
                                                                                                 (Yesod.Core.Types.HandlerT
                                                                                                    Foundation.App
                                                                                                    GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT @ r
"SPEC/Foundation $fApplicativeReaderT_$c<*> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                   ($dApplicative :: GHC.Base.Applicative
                                                                                                       (Yesod.Core.Types.HandlerT
                                                                                                          Foundation.App
                                                                                                          GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$c<*> @ (Yesod.Core.Types.HandlerT
                                                             Foundation.App GHC.Types.IO)
                                                        @ r
                                                        $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$c<*> @ r
"SPEC/Foundation $fApplicativeReaderT_$cp1Applicative @ (HandlerT
                                                          App IO) _" [ALWAYS] forall @ r
                                                                                                                                                       ($dApplicative :: GHC.Base.Applicative
                                                                                                                                                                           (Yesod.Core.Types.HandlerT
                                                                                                                                                                              Foundation.App
                                                                                                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cp1Applicative @ (Yesod.Core.Types.HandlerT
                                                                       Foundation.App GHC.Types.IO)
                                                                  @ r
                                                                  $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cp1Applicative
      @ r
"SPEC/Foundation $fApplicativeReaderT_$cpure @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                    ($dApplicative :: GHC.Base.Applicative
                                                                                                        (Yesod.Core.Types.HandlerT
                                                                                                           Foundation.App
                                                                                                           GHC.Types.IO))
  Control.Monad.Trans.Reader.$fApplicativeReaderT_$cpure @ (Yesod.Core.Types.HandlerT
                                                              Foundation.App GHC.Types.IO)
                                                         @ r
                                                         $dApplicative
  = Foundation.$fYesodPersistApp_$s$fApplicativeReaderT_$cpure @ r
"SPEC/Foundation $fFunctorHandlerT @ IO _" [ALWAYS] forall @ site
                                                           ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fFunctorHandlerT @ GHC.Types.IO @ site $dMonad
  = Foundation.$fYesodPersistApp_$s$fFunctorHandlerT @ site
"SPEC/Foundation $fFunctorReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                         ($dFunctor :: GHC.Base.Functor
                                                                                         (Yesod.Core.Types.HandlerT
                                                                                            Foundation.App
                                                                                            GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT @ (Yesod.Core.Types.HandlerT
                                                   Foundation.App GHC.Types.IO)
                                              @ r
                                              $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT @ r
"SPEC/Foundation $fFunctorReaderT_$c<$ @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dFunctor :: GHC.Base.Functor
                                                                                              (Yesod.Core.Types.HandlerT
                                                                                                 Foundation.App
                                                                                                 GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$c<$ @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$c<$ @ r
"SPEC/Foundation $fFunctorReaderT_$cfmap @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                ($dFunctor :: GHC.Base.Functor
                                                                                                (Yesod.Core.Types.HandlerT
                                                                                                   Foundation.App
                                                                                                   GHC.Types.IO))
  Control.Monad.Trans.Reader.$fFunctorReaderT_$cfmap @ (Yesod.Core.Types.HandlerT
                                                          Foundation.App GHC.Types.IO)
                                                     @ r
                                                     $dFunctor
  = Foundation.$fYesodPersistApp_$s$fFunctorReaderT_$cfmap @ r
"SPEC/Foundation $fMonadBaseControlbHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                          ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBaseControlbHandlerT @ GHC.Types.IO
                                               @ GHC.Types.IO
                                               @ site
                                               $dMonadBaseControl
  = Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT @ site
"SPEC/Foundation $fMonadBaseControlbHandlerT_$cp1MonadBaseControl @ IO @ IO _" [ALWAYS] forall @ site
                                                                                               ($dMonadBaseControl :: Control.Monad.Trans.Control.MonadBaseControl
                                                                                                                        GHC.Types.IO
                                                                                                                        GHC.Types.IO)
  Yesod.Core.Types.$fMonadBaseControlbHandlerT_$cp1MonadBaseControl @ GHC.Types.IO
                                                                    @ GHC.Types.IO
                                                                    @ site
                                                                    $dMonadBaseControl
  = Foundation.$fYesodPersistApp_$s$fMonadBaseControlbHandlerT_$cp1MonadBaseControl
      @ site
"SPEC/Foundation $fMonadBasebHandlerT @ IO @ IO _" [ALWAYS] forall @ site
                                                                   ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                     GHC.Types.IO
                                                                                     GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT @ GHC.Types.IO
                                        @ GHC.Types.IO
                                        @ site
                                        $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cliftBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                              ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                GHC.Types.IO
                                                                                                GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cliftBase @ GHC.Types.IO
                                                   @ GHC.Types.IO
                                                   @ site
                                                   $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cliftBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp1MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp1MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp1MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp2MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp2MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp2MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp3MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp3MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp3MonadBase
      @ site
"SPEC/Foundation $fMonadBasebHandlerT_$cp4MonadBase @ IO @ IO _" [ALWAYS] forall @ site
                                                                                 ($dMonadBase :: Control.Monad.Base.MonadBase
                                                                                                   GHC.Types.IO
                                                                                                   GHC.Types.IO)
  Yesod.Core.Types.$fMonadBasebHandlerT_$cp4MonadBase @ GHC.Types.IO
                                                      @ GHC.Types.IO
                                                      @ site
                                                      $dMonadBase
  = Foundation.$fYesodPersistApp_$s$fMonadBasebHandlerT_$cp4MonadBase
      @ site
"SPEC/Foundation $fMonadHandlerHandlerT @ IO _" [ALWAYS] forall @ site
                                                                ($d(%,,,,%) :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                                 GHC.Types.IO)
  Yesod.Core.Class.Handler.$fMonadHandlerHandlerT @ GHC.Types.IO
                                                  @ site
                                                  $d(%,,,,%)
  = Foundation.$fYesodApp_$s$fMonadHandlerHandlerT @ site
"SPEC/Foundation $fMonadHandlerT @ IO _" [ALWAYS] forall @ site
                                                         ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT @ GHC.Types.IO @ site $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadHandlerT @ site
"SPEC/Foundation $fMonadHandlerT_$cfail @ IO _" [ALWAYS] forall @ site
                                                                ($dMonad :: GHC.Base.Monad
                                                                              GHC.Types.IO)
  Yesod.Core.Types.$fMonadHandlerT_$cfail @ GHC.Types.IO
                                          @ site
                                          $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadHandlerT_$cfail @ site
"SPEC/Foundation $fMonadReaderT @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     (Yesod.Core.Types.HandlerT
                                                                                        Foundation.App
                                                                                        GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT @ (Yesod.Core.Types.HandlerT
                                                 Foundation.App GHC.Types.IO)
                                            @ r
                                            $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT @ r
"SPEC/Foundation $fMonadReaderT_$c>> @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                            ($dMonad :: GHC.Base.Monad
                                                                                          (Yesod.Core.Types.HandlerT
                                                                                             Foundation.App
                                                                                             GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>> @ (Yesod.Core.Types.HandlerT
                                                      Foundation.App GHC.Types.IO)
                                                 @ r
                                                 $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>> @ r
"SPEC/Foundation $fMonadReaderT_$c>>= @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                             ($dMonad :: GHC.Base.Monad
                                                                                           (Yesod.Core.Types.HandlerT
                                                                                              Foundation.App
                                                                                              GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$c>>= @ (Yesod.Core.Types.HandlerT
                                                       Foundation.App GHC.Types.IO)
                                                  @ r
                                                  $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$c>>= @ r
"SPEC/Foundation $fMonadReaderT_$cfail @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                              ($dMonad :: GHC.Base.Monad
                                                                                            (Yesod.Core.Types.HandlerT
                                                                                               Foundation.App
                                                                                               GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cfail @ (Yesod.Core.Types.HandlerT
                                                        Foundation.App GHC.Types.IO)
                                                   @ r
                                                   $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cfail @ r
"SPEC/Foundation $fMonadReaderT_$cp1Monad @ (HandlerT App IO) _" [ALWAYS] forall @ r
                                                                                 ($dMonad :: GHC.Base.Monad
                                                                                               (Yesod.Core.Types.HandlerT
                                                                                                  Foundation.App
                                                                                                  GHC.Types.IO))
  Control.Monad.Trans.Reader.$fMonadReaderT_$cp1Monad @ (Yesod.Core.Types.HandlerT
                                                           Foundation.App GHC.Types.IO)
                                                      @ r
                                                      $dMonad
  = Foundation.$fYesodPersistApp_$s$fMonadReaderT_$cp1Monad @ r
"SPEC/Foundation fromList @ Text" [ALWAYS] forall ($dOrd :: GHC.Classes.Ord
                                                              Data.Text.Internal.Text)
  Data.Set.Base.fromList @ Data.Text.Internal.Text $dOrd
  = Foundation.$fRouteAttrsApp_$sfromList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

